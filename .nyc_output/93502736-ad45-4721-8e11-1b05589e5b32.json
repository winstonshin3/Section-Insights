{"/Users/ryankim/project_team203/src/controller/IInsightFacade.ts":{"path":"/Users/ryankim/project_team203/src/controller/IInsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":113}},"2":{"start":{"line":5,"column":0},"end":{"line":8,"column":89}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":48}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":42}},"5":{"start":{"line":11,"column":8},"end":{"line":11,"column":23}},"6":{"start":{"line":12,"column":8},"end":{"line":12,"column":52}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":36}},"8":{"start":{"line":18,"column":8},"end":{"line":18,"column":23}},"9":{"start":{"line":19,"column":8},"end":{"line":19,"column":53}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":38}},"11":{"start":{"line":25,"column":8},"end":{"line":25,"column":23}},"12":{"start":{"line":26,"column":8},"end":{"line":26,"column":59}},"13":{"start":{"line":29,"column":0},"end":{"line":29,"column":50}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":1},"end":{"line":5,"column":2}},"loc":{"start":{"line":5,"column":31},"end":{"line":8,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":25},"end":{"line":13,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":25},"end":{"line":20,"column":5}},"line":17},"3":{"name":"(anonymous_3)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":25},"end":{"line":27,"column":5}},"line":24}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":24},"end":{"line":8,"column":87}},"type":"binary-expr","locations":[{"start":{"line":8,"column":24},"end":{"line":8,"column":50}},{"start":{"line":8,"column":55},"end":{"line":8,"column":86}}],"line":8}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":16,"6":16,"7":1,"8":0,"9":0,"10":1,"11":0,"12":0,"13":1},"f":{"0":1,"1":16,"2":0,"3":0},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/ryankim/project_team203/src/controller/IInsightFacade.ts","sources":["/Users/ryankim/project_team203/src/controller/IInsightFacade.ts"],"names":[],"mappings":";;;AAMA,IAAY,kBAGX;AAHD,WAAY,kBAAkB;IAC7B,2CAAqB,CAAA;IACrB,qCAAe,CAAA;AAChB,CAAC,EAHW,kBAAkB,GAAlB,0BAAkB,KAAlB,0BAAkB,QAG7B;AAYD,MAAa,YAAa,SAAQ,KAAK;IACtC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IAC7C,CAAC;CACD;AALD,oCAKC;AAED,MAAa,aAAc,SAAQ,KAAK;IACvC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;IAC9C,CAAC;CACD;AALD,sCAKC;AAED,MAAa,mBAAoB,SAAQ,KAAK;IAC7C,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,mBAAmB,CAAC,CAAC;IACpD,CAAC;CACD;AALD,kDAKC","sourcesContent":["/*\n * This is the primary high-level API for the project. In this folder there should be:\n * A class called InsightFacade, this should be in a file called InsightFacade.ts.\n * You should not change this interface at all or the test suite will not work.\n */\n\nexport enum InsightDatasetKind {\n\tSections = \"sections\",\n\tRooms = \"rooms\",\n}\n\nexport interface InsightDataset {\n\tid: string;\n\tkind: InsightDatasetKind;\n\tnumRows: number;\n}\n\nexport interface InsightResult {\n\t[key: string]: string | number;\n}\n\nexport class InsightError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, InsightError);\n\t}\n}\n\nexport class NotFoundError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, NotFoundError);\n\t}\n}\n\nexport class ResultTooLargeError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, ResultTooLargeError);\n\t}\n}\n\nexport interface IInsightFacade {\n\t/**\n\t * Add a dataset to insightUBC.\n\t *\n\t * @param id  The id of the dataset being added. Follows the format /^[^_]+$/\n\t * @param content  The base64 content of the dataset. This content should be in the form of a serialized zip file.\n\t * @param kind  The kind of the dataset\n\t *\n\t * @return Promise <string[]>\n\t *\n\t * The promise should fulfill on a successful add, reject for any failures.\n\t * The promise should fulfill with a string array,\n\t * containing the ids of all currently added datasets upon a successful add.\n\t * The promise should reject with an InsightError describing the error.\n\t *\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\n\t * If id is the same as the id of an already added dataset, the dataset should be rejected and not saved.\n\t *\n\t * After receiving the dataset, it should be processed into a data structure of\n\t * your design. The processed data structure should be persisted to disk; your\n\t * system should be able to load this persisted value into memory for answering\n\t * queries.\n\t *\n\t * Ultimately, a dataset must be added or loaded from disk before queries can\n\t * be successfully answered.\n\t */\n\taddDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]>;\n\n\t/**\n\t * Remove a dataset from insightUBC.\n\t *\n\t * @param id  The id of the dataset to remove. Follows the format /^[^_]+$/\n\t *\n\t * @return Promise <string>\n\t *\n\t * The promise should fulfill upon a successful removal, reject on any error.\n\t * Attempting to remove a dataset that hasn't been added yet counts as an error.\n\t *\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\n\t *\n\t * The promise should fulfill the id of the dataset that was removed.\n\t * The promise should reject with a NotFoundError (if a valid id was not yet added)\n\t * or an InsightError (invalid id or any other source of failure) describing the error.\n\t *\n\t * This will delete both disk and memory caches for the dataset for the id meaning\n\t * that subsequent queries for that id should fail unless a new addDataset happens first.\n\t */\n\tremoveDataset(id: string): Promise<string>;\n\n\t/**\n\t * Perform a query on insightUBC.\n\t *\n\t * @param query  The query to be performed.\n\t *\n\t * If a query is incorrectly formatted, references a dataset not added (in memory or on disk),\n\t * or references multiple datasets, it should be rejected.\n\t *\n\t * @return Promise <InsightResult[]>\n\t *\n\t * The promise should fulfill with an array of results.\n\t * The promise should reject with a ResultTooLargeError (if the query returns too many results)\n\t * or an InsightError (for any other source of failure) describing the error.\n\t */\n\tperformQuery(query: unknown): Promise<InsightResult[]>;\n\n\t/**\n\t * List all currently added datasets, their types, and number of rows.\n\t *\n\t * @return Promise <InsightDataset[]>\n\t * The promise should fulfill an array of currently added InsightDatasets, and will only fulfill.\n\t */\n\tlistDatasets(): Promise<InsightDataset[]>;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"89ef6f3a57af2648274ad60735e79117af6fb78f","contentHash":"6cb2c0aeaab158c3d72e5e2cdb8341560d1d3d2c82c71eb386d80858705c1386"},"/Users/ryankim/project_team203/src/controller/InsightFacade.ts":{"path":"/Users/ryankim/project_team203/src/controller/InsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":72}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":21}},"14":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"15":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"16":{"start":{"line":19,"column":31},"end":{"line":19,"column":42}},"17":{"start":{"line":20,"column":17},"end":{"line":20,"column":19}},"18":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"19":{"start":{"line":21,"column":21},"end":{"line":21,"column":141}},"20":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"21":{"start":{"line":21,"column":109},"end":{"line":21,"column":141}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":36}},"23":{"start":{"line":23,"column":4},"end":{"line":23,"column":18}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":62}},"25":{"start":{"line":26,"column":25},"end":{"line":26,"column":52}},"26":{"start":{"line":27,"column":26},"end":{"line":27,"column":54}},"27":{"start":{"line":28,"column":14},"end":{"line":28,"column":30}},"28":{"start":{"line":29,"column":11},"end":{"line":29,"column":44}},"29":{"start":{"line":31,"column":15},"end":{"line":31,"column":24}},"30":{"start":{"line":33,"column":8},"end":{"line":33,"column":49}},"31":{"start":{"line":34,"column":8},"end":{"line":34,"column":34}},"32":{"start":{"line":37,"column":37},"end":{"line":37,"column":62}},"33":{"start":{"line":38,"column":30},"end":{"line":40,"column":10}},"34":{"start":{"line":39,"column":12},"end":{"line":39,"column":28}},"35":{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},"36":{"start":{"line":42,"column":12},"end":{"line":42,"column":83}},"37":{"start":{"line":44,"column":8},"end":{"line":46,"column":9}},"38":{"start":{"line":45,"column":12},"end":{"line":45,"column":95}},"39":{"start":{"line":48,"column":8},"end":{"line":53,"column":9}},"40":{"start":{"line":49,"column":12},"end":{"line":49,"column":67}},"41":{"start":{"line":52,"column":12},"end":{"line":52,"column":93}},"42":{"start":{"line":54,"column":8},"end":{"line":56,"column":9}},"43":{"start":{"line":55,"column":12},"end":{"line":55,"column":96}},"44":{"start":{"line":57,"column":27},"end":{"line":57,"column":36}},"45":{"start":{"line":58,"column":24},"end":{"line":58,"column":49}},"46":{"start":{"line":59,"column":27},"end":{"line":59,"column":90}},"47":{"start":{"line":60,"column":8},"end":{"line":73,"column":9}},"48":{"start":{"line":61,"column":29},"end":{"line":61,"column":60}},"49":{"start":{"line":62,"column":33},"end":{"line":62,"column":65}},"50":{"start":{"line":63,"column":24},"end":{"line":63,"column":26}},"51":{"start":{"line":64,"column":12},"end":{"line":66,"column":13}},"52":{"start":{"line":65,"column":16},"end":{"line":65,"column":45}},"53":{"start":{"line":67,"column":28},"end":{"line":67,"column":85}},"54":{"start":{"line":68,"column":12},"end":{"line":68,"column":41}},"55":{"start":{"line":69,"column":12},"end":{"line":69,"column":58}},"56":{"start":{"line":72,"column":12},"end":{"line":72,"column":39}},"57":{"start":{"line":74,"column":30},"end":{"line":74,"column":55}},"58":{"start":{"line":75,"column":28},"end":{"line":77,"column":10}},"59":{"start":{"line":76,"column":12},"end":{"line":76,"column":28}},"60":{"start":{"line":78,"column":8},"end":{"line":78,"column":46}},"61":{"start":{"line":81,"column":8},"end":{"line":83,"column":9}},"62":{"start":{"line":82,"column":12},"end":{"line":82,"column":83}},"63":{"start":{"line":84,"column":8},"end":{"line":93,"column":9}},"64":{"start":{"line":85,"column":28},"end":{"line":85,"column":54}},"65":{"start":{"line":86,"column":12},"end":{"line":88,"column":13}},"66":{"start":{"line":87,"column":16},"end":{"line":87,"column":48}},"67":{"start":{"line":89,"column":12},"end":{"line":89,"column":39}},"68":{"start":{"line":92,"column":12},"end":{"line":92,"column":103}},"69":{"start":{"line":96,"column":21},"end":{"line":96,"column":25}},"70":{"start":{"line":97,"column":8},"end":{"line":116,"column":11}},"71":{"start":{"line":98,"column":12},"end":{"line":115,"column":13}},"72":{"start":{"line":101,"column":20},"end":{"line":103,"column":21}},"73":{"start":{"line":102,"column":24},"end":{"line":102,"column":72}},"74":{"start":{"line":104,"column":20},"end":{"line":104,"column":26}},"75":{"start":{"line":108,"column":20},"end":{"line":108,"column":96}},"76":{"start":{"line":110,"column":20},"end":{"line":110,"column":96}},"77":{"start":{"line":112,"column":20},"end":{"line":112,"column":66}},"78":{"start":{"line":114,"column":20},"end":{"line":114,"column":90}},"79":{"start":{"line":117,"column":8},"end":{"line":117,"column":22}},"80":{"start":{"line":120,"column":19},"end":{"line":120,"column":37}},"81":{"start":{"line":121,"column":8},"end":{"line":123,"column":9}},"82":{"start":{"line":122,"column":12},"end":{"line":122,"column":67}},"83":{"start":{"line":124,"column":22},"end":{"line":124,"column":24}},"84":{"start":{"line":125,"column":20},"end":{"line":125,"column":26}},"85":{"start":{"line":126,"column":8},"end":{"line":140,"column":11}},"86":{"start":{"line":127,"column":12},"end":{"line":139,"column":13}},"87":{"start":{"line":129,"column":20},"end":{"line":131,"column":21}},"88":{"start":{"line":130,"column":24},"end":{"line":130,"column":93}},"89":{"start":{"line":132,"column":20},"end":{"line":132,"column":36}},"90":{"start":{"line":133,"column":20},"end":{"line":133,"column":26}},"91":{"start":{"line":135,"column":20},"end":{"line":135,"column":34}},"92":{"start":{"line":136,"column":20},"end":{"line":136,"column":26}},"93":{"start":{"line":138,"column":20},"end":{"line":138,"column":83}},"94":{"start":{"line":141,"column":8},"end":{"line":143,"column":9}},"95":{"start":{"line":142,"column":12},"end":{"line":142,"column":94}},"96":{"start":{"line":144,"column":8},"end":{"line":148,"column":9}},"97":{"start":{"line":145,"column":12},"end":{"line":147,"column":13}},"98":{"start":{"line":146,"column":16},"end":{"line":146,"column":83}},"99":{"start":{"line":151,"column":21},"end":{"line":151,"column":25}},"100":{"start":{"line":152,"column":20},"end":{"line":152,"column":40}},"101":{"start":{"line":153,"column":22},"end":{"line":153,"column":44}},"102":{"start":{"line":154,"column":8},"end":{"line":182,"column":11}},"103":{"start":{"line":155,"column":23},"end":{"line":155,"column":44}},"104":{"start":{"line":156,"column":25},"end":{"line":156,"column":48}},"105":{"start":{"line":157,"column":12},"end":{"line":181,"column":13}},"106":{"start":{"line":159,"column":20},"end":{"line":161,"column":21}},"107":{"start":{"line":160,"column":24},"end":{"line":160,"column":76}},"108":{"start":{"line":162,"column":20},"end":{"line":162,"column":26}},"109":{"start":{"line":164,"column":20},"end":{"line":164,"column":35}},"110":{"start":{"line":165,"column":20},"end":{"line":167,"column":21}},"111":{"start":{"line":166,"column":24},"end":{"line":166,"column":76}},"112":{"start":{"line":168,"column":20},"end":{"line":168,"column":26}},"113":{"start":{"line":170,"column":20},"end":{"line":170,"column":92}},"114":{"start":{"line":172,"column":20},"end":{"line":172,"column":92}},"115":{"start":{"line":174,"column":20},"end":{"line":174,"column":92}},"116":{"start":{"line":176,"column":20},"end":{"line":176,"column":92}},"117":{"start":{"line":178,"column":20},"end":{"line":178,"column":71}},"118":{"start":{"line":180,"column":20},"end":{"line":180,"column":90}},"119":{"start":{"line":183,"column":8},"end":{"line":183,"column":22}},"120":{"start":{"line":186,"column":26},"end":{"line":186,"column":47}},"121":{"start":{"line":187,"column":27},"end":{"line":187,"column":50}},"122":{"start":{"line":188,"column":32},"end":{"line":188,"column":57}},"123":{"start":{"line":189,"column":8},"end":{"line":191,"column":9}},"124":{"start":{"line":190,"column":12},"end":{"line":190,"column":69}},"125":{"start":{"line":192,"column":22},"end":{"line":192,"column":30}},"126":{"start":{"line":193,"column":25},"end":{"line":193,"column":72}},"127":{"start":{"line":194,"column":8},"end":{"line":196,"column":9}},"128":{"start":{"line":195,"column":12},"end":{"line":195,"column":74}},"129":{"start":{"line":197,"column":22},"end":{"line":197,"column":60}},"130":{"start":{"line":198,"column":30},"end":{"line":198,"column":32}},"131":{"start":{"line":199,"column":8},"end":{"line":206,"column":9}},"132":{"start":{"line":200,"column":12},"end":{"line":202,"column":13}},"133":{"start":{"line":201,"column":16},"end":{"line":201,"column":46}},"134":{"start":{"line":203,"column":12},"end":{"line":205,"column":13}},"135":{"start":{"line":204,"column":16},"end":{"line":204,"column":89}},"136":{"start":{"line":207,"column":8},"end":{"line":207,"column":59}},"137":{"start":{"line":208,"column":26},"end":{"line":208,"column":65}},"138":{"start":{"line":209,"column":22},"end":{"line":209,"column":51}},"139":{"start":{"line":210,"column":8},"end":{"line":217,"column":9}},"140":{"start":{"line":211,"column":29},"end":{"line":211,"column":48}},"141":{"start":{"line":212,"column":12},"end":{"line":216,"column":13}},"142":{"start":{"line":213,"column":16},"end":{"line":215,"column":17}},"143":{"start":{"line":214,"column":20},"end":{"line":214,"column":39}},"144":{"start":{"line":218,"column":23},"end":{"line":218,"column":79}},"145":{"start":{"line":219,"column":8},"end":{"line":219,"column":68}},"146":{"start":{"line":219,"column":40},"end":{"line":219,"column":65}},"147":{"start":{"line":220,"column":8},"end":{"line":220,"column":48}},"148":{"start":{"line":223,"column":8},"end":{"line":245,"column":9}},"149":{"start":{"line":224,"column":12},"end":{"line":224,"column":41}},"150":{"start":{"line":225,"column":28},"end":{"line":225,"column":54}},"151":{"start":{"line":226,"column":31},"end":{"line":240,"column":14}},"152":{"start":{"line":227,"column":16},"end":{"line":239,"column":17}},"153":{"start":{"line":228,"column":38},"end":{"line":228,"column":77}},"154":{"start":{"line":229,"column":37},"end":{"line":229,"column":64}},"155":{"start":{"line":230,"column":31},"end":{"line":230,"column":53}},"156":{"start":{"line":231,"column":20},"end":{"line":235,"column":22}},"157":{"start":{"line":238,"column":20},"end":{"line":238,"column":88}},"158":{"start":{"line":241,"column":12},"end":{"line":241,"column":51}},"159":{"start":{"line":244,"column":12},"end":{"line":244,"column":86}},"160":{"start":{"line":248,"column":0},"end":{"line":248,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":80},"end":{"line":13,"column":81}},"loc":{"start":{"line":13,"column":95},"end":{"line":15,"column":1}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":5},"end":{"line":15,"column":6}},"loc":{"start":{"line":15,"column":20},"end":{"line":17,"column":1}},"line":15},"5":{"name":"(anonymous_5)","decl":{"start":{"line":18,"column":50},"end":{"line":18,"column":51}},"loc":{"start":{"line":18,"column":65},"end":{"line":24,"column":1}},"line":18},"6":{"name":"(anonymous_6)","decl":{"start":{"line":32,"column":4},"end":{"line":32,"column":5}},"loc":{"start":{"line":32,"column":18},"end":{"line":35,"column":5}},"line":32},"7":{"name":"(anonymous_7)","decl":{"start":{"line":36,"column":4},"end":{"line":36,"column":5}},"loc":{"start":{"line":36,"column":40},"end":{"line":79,"column":5}},"line":36},"8":{"name":"(anonymous_8)","decl":{"start":{"line":38,"column":57},"end":{"line":38,"column":58}},"loc":{"start":{"line":38,"column":68},"end":{"line":40,"column":9}},"line":38},"9":{"name":"(anonymous_9)","decl":{"start":{"line":75,"column":48},"end":{"line":75,"column":49}},"loc":{"start":{"line":75,"column":59},"end":{"line":77,"column":9}},"line":75},"10":{"name":"(anonymous_10)","decl":{"start":{"line":80,"column":4},"end":{"line":80,"column":5}},"loc":{"start":{"line":80,"column":28},"end":{"line":94,"column":5}},"line":80},"11":{"name":"(anonymous_11)","decl":{"start":{"line":95,"column":4},"end":{"line":95,"column":5}},"loc":{"start":{"line":95,"column":29},"end":{"line":118,"column":5}},"line":95},"12":{"name":"(anonymous_12)","decl":{"start":{"line":97,"column":38},"end":{"line":97,"column":39}},"loc":{"start":{"line":97,"column":56},"end":{"line":116,"column":9}},"line":97},"13":{"name":"(anonymous_13)","decl":{"start":{"line":119,"column":4},"end":{"line":119,"column":5}},"loc":{"start":{"line":119,"column":30},"end":{"line":149,"column":5}},"line":119},"14":{"name":"(anonymous_14)","decl":{"start":{"line":126,"column":38},"end":{"line":126,"column":39}},"loc":{"start":{"line":126,"column":56},"end":{"line":140,"column":9}},"line":126},"15":{"name":"(anonymous_15)","decl":{"start":{"line":150,"column":4},"end":{"line":150,"column":5}},"loc":{"start":{"line":150,"column":33},"end":{"line":184,"column":5}},"line":150},"16":{"name":"(anonymous_16)","decl":{"start":{"line":154,"column":38},"end":{"line":154,"column":39}},"loc":{"start":{"line":154,"column":56},"end":{"line":182,"column":9}},"line":154},"17":{"name":"(anonymous_17)","decl":{"start":{"line":185,"column":4},"end":{"line":185,"column":5}},"loc":{"start":{"line":185,"column":30},"end":{"line":221,"column":5}},"line":185},"18":{"name":"(anonymous_18)","decl":{"start":{"line":219,"column":29},"end":{"line":219,"column":30}},"loc":{"start":{"line":219,"column":40},"end":{"line":219,"column":65}},"line":219},"19":{"name":"(anonymous_19)","decl":{"start":{"line":222,"column":4},"end":{"line":222,"column":5}},"loc":{"start":{"line":222,"column":25},"end":{"line":246,"column":5}},"line":222},"20":{"name":"(anonymous_20)","decl":{"start":{"line":226,"column":45},"end":{"line":226,"column":46}},"loc":{"start":{"line":226,"column":65},"end":{"line":240,"column":13}},"line":226}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"type":"binary-expr","locations":[{"start":{"line":13,"column":26},"end":{"line":13,"column":30}},{"start":{"line":13,"column":34},"end":{"line":13,"column":57}},{"start":{"line":13,"column":63},"end":{"line":17,"column":1}}],"line":13},"9":{"loc":{"start":{"line":13,"column":63},"end":{"line":17,"column":1}},"type":"cond-expr","locations":[{"start":{"line":13,"column":80},"end":{"line":15,"column":1}},{"start":{"line":15,"column":5},"end":{"line":17,"column":1}}],"line":13},"10":{"loc":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"type":"binary-expr","locations":[{"start":{"line":18,"column":20},"end":{"line":18,"column":24}},{"start":{"line":18,"column":28},"end":{"line":18,"column":45}},{"start":{"line":18,"column":50},"end":{"line":24,"column":1}}],"line":18},"11":{"loc":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},{"start":{"line":19,"column":4},"end":{"line":19,"column":42}}],"line":19},"12":{"loc":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"type":"binary-expr","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":11}},{"start":{"line":19,"column":15},"end":{"line":19,"column":29}}],"line":19},"13":{"loc":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},{"start":{"line":21,"column":4},"end":{"line":21,"column":141}}],"line":21},"14":{"loc":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},{"start":{"line":21,"column":40},"end":{"line":21,"column":141}}],"line":21},"15":{"loc":{"start":{"line":21,"column":44},"end":{"line":21,"column":107}},"type":"binary-expr","locations":[{"start":{"line":21,"column":44},"end":{"line":21,"column":59}},{"start":{"line":21,"column":63},"end":{"line":21,"column":107}}],"line":21},"16":{"loc":{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},"type":"if","locations":[{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},{"start":{"line":41,"column":8},"end":{"line":43,"column":9}}],"line":41},"17":{"loc":{"start":{"line":41,"column":12},"end":{"line":41,"column":84}},"type":"binary-expr","locations":[{"start":{"line":41,"column":12},"end":{"line":41,"column":21}},{"start":{"line":41,"column":25},"end":{"line":41,"column":41}},{"start":{"line":41,"column":45},"end":{"line":41,"column":61}},{"start":{"line":41,"column":65},"end":{"line":41,"column":84}}],"line":41},"18":{"loc":{"start":{"line":44,"column":8},"end":{"line":46,"column":9}},"type":"if","locations":[{"start":{"line":44,"column":8},"end":{"line":46,"column":9}},{"start":{"line":44,"column":8},"end":{"line":46,"column":9}}],"line":44},"19":{"loc":{"start":{"line":54,"column":8},"end":{"line":56,"column":9}},"type":"if","locations":[{"start":{"line":54,"column":8},"end":{"line":56,"column":9}},{"start":{"line":54,"column":8},"end":{"line":56,"column":9}}],"line":54},"20":{"loc":{"start":{"line":81,"column":8},"end":{"line":83,"column":9}},"type":"if","locations":[{"start":{"line":81,"column":8},"end":{"line":83,"column":9}},{"start":{"line":81,"column":8},"end":{"line":83,"column":9}}],"line":81},"21":{"loc":{"start":{"line":81,"column":12},"end":{"line":81,"column":61}},"type":"binary-expr","locations":[{"start":{"line":81,"column":12},"end":{"line":81,"column":21}},{"start":{"line":81,"column":25},"end":{"line":81,"column":41}},{"start":{"line":81,"column":45},"end":{"line":81,"column":61}}],"line":81},"22":{"loc":{"start":{"line":86,"column":12},"end":{"line":88,"column":13}},"type":"if","locations":[{"start":{"line":86,"column":12},"end":{"line":88,"column":13}},{"start":{"line":86,"column":12},"end":{"line":88,"column":13}}],"line":86},"23":{"loc":{"start":{"line":98,"column":12},"end":{"line":115,"column":13}},"type":"switch","locations":[{"start":{"line":99,"column":16},"end":{"line":99,"column":27}},{"start":{"line":100,"column":16},"end":{"line":104,"column":26}},{"start":{"line":105,"column":16},"end":{"line":105,"column":26}},{"start":{"line":106,"column":16},"end":{"line":106,"column":26}},{"start":{"line":107,"column":16},"end":{"line":108,"column":96}},{"start":{"line":109,"column":16},"end":{"line":110,"column":96}},{"start":{"line":111,"column":16},"end":{"line":112,"column":66}},{"start":{"line":113,"column":16},"end":{"line":114,"column":90}}],"line":98},"24":{"loc":{"start":{"line":102,"column":33},"end":{"line":102,"column":71}},"type":"binary-expr","locations":[{"start":{"line":102,"column":33},"end":{"line":102,"column":39}},{"start":{"line":102,"column":43},"end":{"line":102,"column":71}}],"line":102},"25":{"loc":{"start":{"line":121,"column":8},"end":{"line":123,"column":9}},"type":"if","locations":[{"start":{"line":121,"column":8},"end":{"line":123,"column":9}},{"start":{"line":121,"column":8},"end":{"line":123,"column":9}}],"line":121},"26":{"loc":{"start":{"line":127,"column":12},"end":{"line":139,"column":13}},"type":"switch","locations":[{"start":{"line":128,"column":16},"end":{"line":133,"column":26}},{"start":{"line":134,"column":16},"end":{"line":136,"column":26}},{"start":{"line":137,"column":16},"end":{"line":138,"column":83}}],"line":127},"27":{"loc":{"start":{"line":129,"column":20},"end":{"line":131,"column":21}},"type":"if","locations":[{"start":{"line":129,"column":20},"end":{"line":131,"column":21}},{"start":{"line":129,"column":20},"end":{"line":131,"column":21}}],"line":129},"28":{"loc":{"start":{"line":129,"column":24},"end":{"line":129,"column":67}},"type":"binary-expr","locations":[{"start":{"line":129,"column":24},"end":{"line":129,"column":45}},{"start":{"line":129,"column":49},"end":{"line":129,"column":67}}],"line":129},"29":{"loc":{"start":{"line":141,"column":8},"end":{"line":143,"column":9}},"type":"if","locations":[{"start":{"line":141,"column":8},"end":{"line":143,"column":9}},{"start":{"line":141,"column":8},"end":{"line":143,"column":9}}],"line":141},"30":{"loc":{"start":{"line":145,"column":12},"end":{"line":147,"column":13}},"type":"if","locations":[{"start":{"line":145,"column":12},"end":{"line":147,"column":13}},{"start":{"line":145,"column":12},"end":{"line":147,"column":13}}],"line":145},"31":{"loc":{"start":{"line":145,"column":16},"end":{"line":145,"column":65}},"type":"binary-expr","locations":[{"start":{"line":145,"column":16},"end":{"line":145,"column":37}},{"start":{"line":145,"column":41},"end":{"line":145,"column":65}}],"line":145},"32":{"loc":{"start":{"line":157,"column":12},"end":{"line":181,"column":13}},"type":"switch","locations":[{"start":{"line":158,"column":16},"end":{"line":162,"column":26}},{"start":{"line":163,"column":16},"end":{"line":168,"column":26}},{"start":{"line":169,"column":16},"end":{"line":170,"column":92}},{"start":{"line":171,"column":16},"end":{"line":172,"column":92}},{"start":{"line":173,"column":16},"end":{"line":174,"column":92}},{"start":{"line":175,"column":16},"end":{"line":176,"column":92}},{"start":{"line":177,"column":16},"end":{"line":178,"column":71}},{"start":{"line":179,"column":16},"end":{"line":180,"column":90}}],"line":157},"33":{"loc":{"start":{"line":160,"column":33},"end":{"line":160,"column":75}},"type":"binary-expr","locations":[{"start":{"line":160,"column":33},"end":{"line":160,"column":65}},{"start":{"line":160,"column":69},"end":{"line":160,"column":75}}],"line":160},"34":{"loc":{"start":{"line":166,"column":33},"end":{"line":166,"column":75}},"type":"binary-expr","locations":[{"start":{"line":166,"column":33},"end":{"line":166,"column":65}},{"start":{"line":166,"column":69},"end":{"line":166,"column":75}}],"line":166},"35":{"loc":{"start":{"line":189,"column":8},"end":{"line":191,"column":9}},"type":"if","locations":[{"start":{"line":189,"column":8},"end":{"line":191,"column":9}},{"start":{"line":189,"column":8},"end":{"line":191,"column":9}}],"line":189},"36":{"loc":{"start":{"line":189,"column":12},"end":{"line":189,"column":90}},"type":"binary-expr","locations":[{"start":{"line":189,"column":12},"end":{"line":189,"column":48}},{"start":{"line":189,"column":52},"end":{"line":189,"column":90}}],"line":189},"37":{"loc":{"start":{"line":194,"column":8},"end":{"line":196,"column":9}},"type":"if","locations":[{"start":{"line":194,"column":8},"end":{"line":196,"column":9}},{"start":{"line":194,"column":8},"end":{"line":196,"column":9}}],"line":194},"38":{"loc":{"start":{"line":200,"column":12},"end":{"line":202,"column":13}},"type":"if","locations":[{"start":{"line":200,"column":12},"end":{"line":202,"column":13}},{"start":{"line":200,"column":12},"end":{"line":202,"column":13}}],"line":200},"39":{"loc":{"start":{"line":203,"column":12},"end":{"line":205,"column":13}},"type":"if","locations":[{"start":{"line":203,"column":12},"end":{"line":205,"column":13}},{"start":{"line":203,"column":12},"end":{"line":205,"column":13}}],"line":203},"40":{"loc":{"start":{"line":213,"column":16},"end":{"line":215,"column":17}},"type":"if","locations":[{"start":{"line":213,"column":16},"end":{"line":215,"column":17}},{"start":{"line":213,"column":16},"end":{"line":215,"column":17}}],"line":213}},"s":{"0":1,"1":149,"2":149,"3":149,"4":149,"5":149,"6":50,"7":149,"8":0,"9":0,"10":0,"11":1,"12":1,"13":0,"14":1,"15":1,"16":0,"17":1,"18":1,"19":1,"20":149,"21":149,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":13,"30":13,"31":13,"32":12,"33":12,"34":1,"35":12,"36":3,"37":9,"38":1,"39":8,"40":8,"41":1,"42":7,"43":3,"44":4,"45":4,"46":4,"47":4,"48":4,"49":4,"50":4,"51":4,"52":23776,"53":4,"54":4,"55":4,"56":0,"57":4,"58":4,"59":4,"60":4,"61":2,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":0,"69":24,"70":24,"71":24,"72":8,"73":16,"74":8,"75":11,"76":4,"77":1,"78":0,"79":24,"80":4,"81":4,"82":0,"83":4,"84":4,"85":4,"86":8,"87":4,"88":0,"89":4,"90":4,"91":4,"92":4,"93":0,"94":4,"95":0,"96":4,"97":11,"98":0,"99":1098404,"100":1098404,"101":1098404,"102":1098404,"103":1098404,"104":1098404,"105":1098404,"106":193836,"107":387672,"108":193836,"109":193836,"110":193836,"111":387672,"112":193836,"113":64612,"114":193836,"115":193836,"116":193836,"117":64612,"118":0,"119":1098404,"120":11,"121":11,"122":11,"123":11,"124":3,"125":8,"126":8,"127":8,"128":4,"129":4,"130":4,"131":4,"132":258448,"133":187,"134":258448,"135":0,"136":4,"137":4,"138":4,"139":4,"140":187,"141":187,"142":1870,"143":1358,"144":4,"145":4,"146":543,"147":4,"148":17,"149":17,"150":17,"151":17,"152":6,"153":6,"154":6,"155":6,"156":6,"157":0,"158":17,"159":0,"160":1},"f":{"0":149,"1":50,"2":0,"3":1,"4":0,"5":1,"6":13,"7":12,"8":1,"9":4,"10":2,"11":24,"12":24,"13":4,"14":8,"15":1098404,"16":1098404,"17":11,"18":543,"19":17,"20":6},"b":{"0":[1,1,1],"1":[1,0],"2":[149,0],"3":[149,0],"4":[149,149],"5":[0,149],"6":[149,0],"7":[0,0],"8":[1,1,1],"9":[1,0],"10":[1,1,1],"11":[0,1],"12":[1,1],"13":[1,0],"14":[149,0],"15":[149,149],"16":[3,9],"17":[12,11,10,9],"18":[1,8],"19":[3,4],"20":[1,1],"21":[2,1,1],"22":[1,0],"23":[4,8,1,8,11,4,1,0],"24":[16,15],"25":[0,4],"26":[4,4,0],"27":[0,4],"28":[4,4],"29":[0,4],"30":[0,11],"31":[11,11],"32":[193836,193836,64612,193836,193836,193836,64612,0],"33":[387672,3837],"34":[387672,387534],"35":[3,8],"36":[11,9],"37":[4,4],"38":[187,258261],"39":[0,258448],"40":[1358,512]},"inputSourceMap":{"version":3,"file":"/Users/ryankim/project_team203/src/controller/InsightFacade.ts","sources":["/Users/ryankim/project_team203/src/controller/InsightFacade.ts"],"names":[],"mappings":"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","sourcesContent":["import {IInsightFacade, InsightDataset, InsightDatasetKind, InsightResult, InsightError, ResultTooLargeError, NotFoundError\n} from \"./IInsightFacade\";\n\nimport {makeInsightResult, getFilPromises, assignID, getID, lt, gt, is, eq, validComparison, getData, getOrderKey\n} from \"./HelperFunctions\";\nimport JSZip = require(\"jszip\");\nimport * as fs from \"fs-extra\";\n\n/**\n * This is the main programmatic entry point for the project.\n * Method documentation is in IInsightFacade\n *\n */\nexport default class InsightFacade implements IInsightFacade {\n\tprivate datasets: Map<string, any> = new Map<string, any>();\n\tconstructor() {\n\t\tconsole.log(\"InsightFacadeImpl::init()\");\n\t\tthis.datasets = new Map<string, InsightDataset>();\n\n\t}\n\n\tpublic async addDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]> {\n\t\tlet currentInsightDatasets: InsightDataset[] = await this.listDatasets();\n        let currentDatasets = currentInsightDatasets.map((value) => {\n            return value.id;\n        });\n\t\t// console.log(\"Current Datasets: \" + currentDatasets);\n\n\t\tif (id === \"\" || id.includes(\"_\") || id.trim() === \"\" || kind !== \"sections\") {\n\t\t\treturn Promise.reject(new InsightError(\"Invalid id\"));\n\t\t}\n\t\tif (currentDatasets.includes(id)) {\n    \t\treturn Promise.reject(new InsightError(\"Dataset already exists\"));\n\t\t}\n\t\tlet zip;\n\n\t\t// let zip = await JSZip.loadAsync(content, {base64: true});\n\n\n\t\ttry {\n\t\t\tzip = await JSZip.loadAsync(content, {base64: true});\n\t\t\t// ... continue with your existing logic ...\n\t\t} catch (e) {\n\t\t\t// This catches the JSZip error and rejects with an InsightError\n\t\t\treturn Promise.reject(new InsightError(\"Invalid base64 input\"));\n\t\t}\n\t\t\n\n\t\t// let folder = zip.folder(kind);\n\t\t// console.log(\"Folder: \" + folder);\n\n\t\t// if (folder === null) {\n\t\t// \treturn Promise.reject(new InsightError(\"Folder not found in zip\"));\n\t\t// }\n\t\t// console.log(zip.files);\n\t\tif (!zip.files[\"courses/\"]) {\n\t\t\treturn Promise.reject(new InsightError(\"Folder not found in zip\"));\n\t\t}\n\t\tlet fileInFolder = zip.files;\n\t\tlet fileNames = Object.keys(fileInFolder);\n\t\tlet filePromises = await getFilPromises(fileNames, zip, id);\n\t\ttry {\n\t\t\tlet rawResults = await Promise.all(filePromises);\n\t\t\tlet refinedResults: object[][] = rawResults.filter(Array.isArray);\n\t\t\tlet array: object[] = [];\n\t\t\tfor (let result of refinedResults) {\n\t\t\t\tarray = array.concat(result);\n\t\t\t}\n\t\t\tlet cacheData: object = makeInsightResult(id, kind, array);\n\t\t\tawait fs.ensureDir(\"./data\");\n\t\t\tawait fs.writeJson(`./data/${id}`, cacheData);\n\t\t} catch (err) {\n\t\t\treturn Promise.reject(err);\n\t\t}\n\t\tlet insightDatasets: InsightDataset[] = await this.listDatasets();\n\t\tlet addedDatasets = insightDatasets.map((value) => {\n\t\t\treturn value.id;\n\t\t});\n\t\treturn Promise.resolve(addedDatasets);\n\t}\n\n\n\tpublic async removeDataset(id: string): Promise<string> {\n\t\t// Check for invalid id\n\t\tif (id === \"\" || id.includes(\"_\") || id.trim() === \"\") {\n\t\t\treturn Promise.reject(new InsightError(\"Invalid id\"));\n\t\t}\n\n\t\ttry {\n\t\t\tlet fileNames = await fs.readdir(\"./data\");\n\t\t\t// await fs.remove(`./data/${id}.json`);\n\t\t\tif (fileNames.includes(`${id}`)) {\n\t\t\t\tawait fs.remove(`./data/${id}`);\n\t\t\t}\n\t\t\t// Return the id of the dataset that was removed\n\t\t\treturn Promise.resolve(id);\n\t\t\t// return id;\n\t\t} catch (err) {\n\t\t\treturn Promise.reject(new InsightError(\"Error removing dataset: \" + err));\n\t\t}\n\t}\n\n\n\tpublic validateWhere(query: object, id: string[]): boolean {\n\t\t// Currently: checks if mComparison's and sComparison's type are number and string.\n\t\t// checks if filter key is invalid and throws insight error.\n\t\tlet result: boolean = true;\n\t\tObject.entries(query).forEach(([key, value]) => {\n\t\t\tswitch (key) {\n\t\t\t\tcase \"AND\":\n\t\t\t\tcase \"OR\":\n\t\t\t\t\tfor (let item of value) {\n\t\t\t\t\t\tresult = result && this.validateWhere(item, id);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"LT\":\n\t\t\t\tcase \"GT\":\n\t\t\t\tcase \"EQ\":\n\t\t\t\t\treturn result = validComparison(value, id, \"number\");\n\t\t\t\tcase \"IS\":\n\t\t\t\t\treturn result = validComparison(value, id, \"string\");\n\t\t\t\tcase \"NOT\":\n\t\t\t\t\treturn result = this.validateWhere(value, id);\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new InsightError(\"Invalid filter key: \" + key);\n\t\t\t}\n\t\t});\n\t\treturn result;\n\t}\n\n\tpublic validateOption(query: object, id: string[]): void {\n\t\tlet keys = Object.keys(query);\n\t\tif (!keys.includes(\"COLUMNS\")) {\n\t\t\tthrow new InsightError(\"No columns!\");\n\t\t}\n\t\tlet columns: string[] = [];\n\t\tlet order: string = \"null\";\n\t\tObject.entries(query).forEach(([key, value]) => {\n\t\t\tswitch (key) {\n\t\t\t\tcase \"COLUMNS\":\n\t\t\t\t\tif (!Array.isArray(value) || value.length === 0) {\n\t\t\t\t\t\tthrow new InsightError(\"Column must be non-empty!\");\n\t\t\t\t\t}\n\t\t\t\t\tcolumns = value;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"ORDER\":\n\t\t\t\t\torder = value;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new InsightError(\"Invalid Key: \" + key);\n\t\t\t}\n\t\t});\n\t\tif (!columns.includes(order)) {\n\t\t\tthrow new InsightError(\"Items in order must be in columns too!\");\n\t\t}\n\t\tfor (let item of columns) {\n\t\t\tif (!item.includes(id[0]) || !(order.includes(id[0]))) {\n\t\t\t\tthrow new InsightError(\"One database at a time!\");\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic performWhere(query: object, subject: object): boolean {\n\t\tlet result: boolean = true;\n\t\tlet skeys = Object.keys(subject);\n\t\tlet svalues = Object.values(subject);\n\t\tObject.entries(query).forEach(([key, value]) => {\n\t\t\tlet ckey: string = Object.keys(value)[0];\n\t\t\tlet cvalue = Object.values(value)[0];\n\t\t\tswitch (key) {\n\t\t\t\tcase \"AND\":\n\t\t\t\t\tfor (let item of value) {\n\t\t\t\t\t\tresult = this.performWhere(item, subject) && result;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"OR\":\n\t\t\t\t\tresult = false;\n\t\t\t\t\tfor (let item of value) {\n\t\t\t\t\t\tresult = this.performWhere(item, subject) || result;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"LT\":\n\t\t\t\t\treturn result = lt(ckey, (cvalue as number), skeys, svalues);\n\t\t\t\tcase \"GT\":\n\t\t\t\t\treturn result =  gt(ckey, (cvalue as number), skeys, svalues);\n\t\t\t\tcase \"EQ\":\n\t\t\t\t\treturn result = eq(ckey, (cvalue as number), skeys, svalues);\n\t\t\t\tcase \"IS\":\n\t\t\t\t\treturn result = is(ckey, (cvalue as string), skeys, svalues);\n\t\t\t\tcase \"NOT\":\n\t\t\t\t\treturn result = !this.performWhere(value, subject);\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new InsightError(\"Invalid filter key: \" + key);\n\t\t\t}\n\t\t});\n\t\treturn result;\n\t}\n\n\tpublic async performQuery(query: unknown): Promise<InsightResult[]> {\n\t\tlet jsonContent = JSON.stringify(query);\n\t\tlet queryContent = JSON.parse(jsonContent);\n\t\tlet queryContentNames = Object.keys(queryContent);\n        if (!queryContentNames.includes(\"WHERE\") || !queryContentNames.includes(\"OPTIONS\")) {\n            throw new InsightError(\"Invalid query\");\n        }\n\t\tlet idArray: string[] = [\"null\"];\n\t\tlet typesMatch: boolean = this.validateWhere(queryContent.WHERE, idArray); // This throws insightErrors. true;\n\t\tif (!typesMatch) {\n            throw new InsightError(\"Types don't match!\");\n        }\n\t\tlet results: object[] = await getData();\n\t\tlet filteredResults: any[] = [];\n\t\tfor (let section of results) {\n\t\t\t// console.log(this.performWhere(queryContent.WHERE, section));\n\t\t\tif (this.performWhere(queryContent.WHERE, section)) {\n\t\t\t\tfilteredResults.push(section);\n\t\t\t}\n\t\t\tif (filteredResults.length > 5000) {\n\t\t\t\tthrow new ResultTooLargeError(\"Its over 5000 queries!\");\n\t\t\t}\n\t\t}\n\t\t// console.log(filteredResults);\n\t\tthis.validateOption(queryContent.OPTIONS, idArray);\n\t\tlet columnsPair: [string, any] = Object.entries(queryContent.OPTIONS)[0];\n\t\tlet columns: string[] = Object.values(columnsPair)[1];\n\t\tfor (let result of filteredResults) {\n\t\t\tlet resultKeys = Object.keys(result);\n\t\t\tfor (let key of resultKeys) {\n\t\t\t\tif (!columns.includes(key)) {\n\t\t\t\t\tdelete result[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tlet orderKey = getOrderKey(queryContent.OPTIONS);\n\t\tfilteredResults.sort((a,b) =>\n\t\t\t(a[orderKey] - b[orderKey])\n\t\t);\n\t\treturn Promise.resolve(filteredResults);\n\t}\n\n\tpublic async listDatasets(): Promise<InsightDataset[]> {\n\t\ttry {\n\t\t\t// Check if the './data' directory exists. If not, return an empty array\n\t\t\tawait fs.ensureDir(\"./data\");\n\n\t\n\t\t\tlet fileNames = await fs.readdir(\"./data\");\n\t\t\tlet filePromises = fileNames.map(async (fileName) => {\n\t\t\t\ttry {\n\t\t\t\t\tlet fileContent = await fs.readJson(`./data/${fileName}`);\n\t\t\t\t\tlet jsonString = JSON.stringify(fileContent);\n\t\t\t\t\tlet data = JSON.parse(jsonString);\n\t\t\t\t\treturn {\n\t\t\t\t\t\tid: data.id,\n\t\t\t\t\t\tkind: data.kind,\n\t\t\t\t\t\tnumRows: data.numRows\n\t\t\t\t\t};\n\t\t\t\t} catch (err) {\n\t\t\t\t\tthrow new InsightError(\"Corrupted persisted file\");\n\t\t\t\t}\n\t\t\t});\n\t\n\t\t\treturn await Promise.all(filePromises);\n\t\t} catch (err) {\n\t\t\tthrow new InsightError(\"Error listing datasets: \" + err);\n\t\t}\n\t}\n\t\n\t// public async listDatasets(): Promise<InsightDataset[]> {\n\t// \tlet fileNames = await fs.readdir(\"./data\");\n\t// \tlet filePromises = fileNames.map(async (fileName) => {\n\t// \t\ttry {\n\t\t\t\t\n\t// \t\t\tlet fileContent = await fs.readJson(`./data/${fileName}`);\n\t// \t\t\tlet jsonString = JSON.stringify(fileContent);\n\t// \t\t\tlet data = JSON.parse(jsonString);\n\t// \t\t\treturn {\n\t// \t\t\t\tid: data.id,\n\t// \t\t\t\tkind: data.kind,\n\t// \t\t\t\tnumRows: data.numRows\n\t// \t\t\t};\n\t// \t\t} catch (err) {\n\t// \t\t\tthrow new InsightError(\"Corrupted persisted file\");\n\t// \t\t}\n\t// \t});\n\t// \tlet results: InsightDataset[];\n\t// \ttry {\n\t// \t\tresults = await Promise.all(filePromises);\n\t// \t} catch (err) {\n\t// \t\tthrow new InsightError(\"Blah\");\n\t// \t}\n\t// \treturn Promise.resolve(results);\n\t// }\n}\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5cdf26432a2c12fafe9bc748319a43891a610c19","contentHash":"69e4e24aa7a254196da36ca3255d7ca6884ab9d479d0ec16f3bb8555861696b6"},"/Users/ryankim/project_team203/src/controller/HelperFunctions.ts":{"path":"/Users/ryankim/project_team203/src/controller/HelperFunctions.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":72}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":21}},"14":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"15":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"16":{"start":{"line":19,"column":31},"end":{"line":19,"column":42}},"17":{"start":{"line":20,"column":17},"end":{"line":20,"column":19}},"18":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"19":{"start":{"line":21,"column":21},"end":{"line":21,"column":141}},"20":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"21":{"start":{"line":21,"column":109},"end":{"line":21,"column":141}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":36}},"23":{"start":{"line":23,"column":4},"end":{"line":23,"column":18}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":62}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":230}},"26":{"start":{"line":27,"column":25},"end":{"line":27,"column":52}},"27":{"start":{"line":28,"column":11},"end":{"line":28,"column":44}},"28":{"start":{"line":30,"column":21},"end":{"line":30,"column":23}},"29":{"start":{"line":31,"column":4},"end":{"line":31,"column":26}},"30":{"start":{"line":32,"column":4},"end":{"line":32,"column":30}},"31":{"start":{"line":33,"column":4},"end":{"line":33,"column":41}},"32":{"start":{"line":34,"column":4},"end":{"line":34,"column":31}},"33":{"start":{"line":35,"column":4},"end":{"line":35,"column":22}},"34":{"start":{"line":37,"column":0},"end":{"line":37,"column":46}},"35":{"start":{"line":39,"column":23},"end":{"line":52,"column":6}},"36":{"start":{"line":40,"column":19},"end":{"line":40,"column":37}},"37":{"start":{"line":41,"column":8},"end":{"line":51,"column":9}},"38":{"start":{"line":42,"column":12},"end":{"line":50,"column":13}},"39":{"start":{"line":43,"column":34},"end":{"line":43,"column":60}},"40":{"start":{"line":44,"column":33},"end":{"line":44,"column":56}},"41":{"start":{"line":45,"column":33},"end":{"line":45,"column":50}},"42":{"start":{"line":46,"column":16},"end":{"line":46,"column":46}},"43":{"start":{"line":49,"column":16},"end":{"line":49,"column":94}},"44":{"start":{"line":53,"column":4},"end":{"line":53,"column":24}},"45":{"start":{"line":55,"column":0},"end":{"line":55,"column":40}},"46":{"start":{"line":57,"column":4},"end":{"line":68,"column":8}},"47":{"start":{"line":57,"column":37},"end":{"line":68,"column":5}},"48":{"start":{"line":70,"column":0},"end":{"line":70,"column":24}},"49":{"start":{"line":72,"column":16},"end":{"line":72,"column":30}},"50":{"start":{"line":73,"column":4},"end":{"line":75,"column":5}},"51":{"start":{"line":74,"column":8},"end":{"line":74,"column":78}},"52":{"start":{"line":76,"column":4},"end":{"line":76,"column":20}},"53":{"start":{"line":78,"column":0},"end":{"line":78,"column":22}},"54":{"start":{"line":80,"column":4},"end":{"line":87,"column":5}},"55":{"start":{"line":81,"column":8},"end":{"line":81,"column":26}},"56":{"start":{"line":84,"column":8},"end":{"line":86,"column":9}},"57":{"start":{"line":85,"column":12},"end":{"line":85,"column":85}},"58":{"start":{"line":89,"column":0},"end":{"line":89,"column":28}},"59":{"start":{"line":91,"column":4},"end":{"line":93,"column":5}},"60":{"start":{"line":92,"column":8},"end":{"line":92,"column":52}},"61":{"start":{"line":94,"column":4},"end":{"line":94,"column":17}},"62":{"start":{"line":96,"column":0},"end":{"line":96,"column":16}},"63":{"start":{"line":98,"column":4},"end":{"line":100,"column":5}},"64":{"start":{"line":99,"column":8},"end":{"line":99,"column":52}},"65":{"start":{"line":101,"column":4},"end":{"line":101,"column":17}},"66":{"start":{"line":103,"column":0},"end":{"line":103,"column":16}},"67":{"start":{"line":105,"column":4},"end":{"line":107,"column":5}},"68":{"start":{"line":106,"column":8},"end":{"line":106,"column":54}},"69":{"start":{"line":108,"column":4},"end":{"line":108,"column":17}},"70":{"start":{"line":110,"column":0},"end":{"line":110,"column":16}},"71":{"start":{"line":112,"column":4},"end":{"line":126,"column":5}},"72":{"start":{"line":113,"column":21},"end":{"line":113,"column":48}},"73":{"start":{"line":114,"column":8},"end":{"line":125,"column":9}},"74":{"start":{"line":115,"column":12},"end":{"line":115,"column":43}},"75":{"start":{"line":117,"column":13},"end":{"line":125,"column":9}},"76":{"start":{"line":118,"column":12},"end":{"line":118,"column":45}},"77":{"start":{"line":120,"column":13},"end":{"line":125,"column":9}},"78":{"start":{"line":121,"column":12},"end":{"line":121,"column":43}},"79":{"start":{"line":124,"column":12},"end":{"line":124,"column":37}},"80":{"start":{"line":127,"column":4},"end":{"line":127,"column":16}},"81":{"start":{"line":129,"column":0},"end":{"line":129,"column":16}},"82":{"start":{"line":131,"column":20},"end":{"line":131,"column":48}},"83":{"start":{"line":132,"column":4},"end":{"line":132,"column":28}},"84":{"start":{"line":133,"column":4},"end":{"line":133,"column":51}},"85":{"start":{"line":135,"column":0},"end":{"line":135,"column":42}},"86":{"start":{"line":137,"column":22},"end":{"line":137,"column":46}},"87":{"start":{"line":138,"column":4},"end":{"line":138,"column":41}},"88":{"start":{"line":140,"column":0},"end":{"line":140,"column":34}},"89":{"start":{"line":142,"column":20},"end":{"line":142,"column":46}},"90":{"start":{"line":143,"column":23},"end":{"line":153,"column":6}},"91":{"start":{"line":144,"column":8},"end":{"line":152,"column":9}},"92":{"start":{"line":145,"column":30},"end":{"line":145,"column":69}},"93":{"start":{"line":146,"column":29},"end":{"line":146,"column":56}},"94":{"start":{"line":147,"column":23},"end":{"line":147,"column":45}},"95":{"start":{"line":148,"column":12},"end":{"line":148,"column":29}},"96":{"start":{"line":151,"column":12},"end":{"line":151,"column":80}},"97":{"start":{"line":154,"column":16},"end":{"line":154,"column":18}},"98":{"start":{"line":155,"column":4},"end":{"line":165,"column":5}},"99":{"start":{"line":156,"column":25},"end":{"line":156,"column":56}},"100":{"start":{"line":157,"column":29},"end":{"line":157,"column":61}},"101":{"start":{"line":158,"column":8},"end":{"line":160,"column":9}},"102":{"start":{"line":159,"column":12},"end":{"line":159,"column":41}},"103":{"start":{"line":161,"column":8},"end":{"line":161,"column":21}},"104":{"start":{"line":164,"column":8},"end":{"line":164,"column":56}},"105":{"start":{"line":167,"column":0},"end":{"line":167,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":80},"end":{"line":13,"column":81}},"loc":{"start":{"line":13,"column":95},"end":{"line":15,"column":1}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":5},"end":{"line":15,"column":6}},"loc":{"start":{"line":15,"column":20},"end":{"line":17,"column":1}},"line":15},"5":{"name":"(anonymous_5)","decl":{"start":{"line":18,"column":50},"end":{"line":18,"column":51}},"loc":{"start":{"line":18,"column":65},"end":{"line":24,"column":1}},"line":18},"6":{"name":"makeInsightResult","decl":{"start":{"line":29,"column":9},"end":{"line":29,"column":26}},"loc":{"start":{"line":29,"column":44},"end":{"line":36,"column":1}},"line":29},"7":{"name":"getFilPromises","decl":{"start":{"line":38,"column":15},"end":{"line":38,"column":29}},"loc":{"start":{"line":38,"column":50},"end":{"line":54,"column":1}},"line":38},"8":{"name":"(anonymous_8)","decl":{"start":{"line":39,"column":37},"end":{"line":39,"column":38}},"loc":{"start":{"line":39,"column":57},"end":{"line":52,"column":5}},"line":39},"9":{"name":"getMap","decl":{"start":{"line":56,"column":9},"end":{"line":56,"column":15}},"loc":{"start":{"line":56,"column":32},"end":{"line":69,"column":1}},"line":56},"10":{"name":"(anonymous_10)","decl":{"start":{"line":57,"column":26},"end":{"line":57,"column":27}},"loc":{"start":{"line":57,"column":37},"end":{"line":68,"column":5}},"line":57},"11":{"name":"getID","decl":{"start":{"line":71,"column":9},"end":{"line":71,"column":14}},"loc":{"start":{"line":71,"column":20},"end":{"line":77,"column":1}},"line":71},"12":{"name":"assignID","decl":{"start":{"line":79,"column":9},"end":{"line":79,"column":17}},"loc":{"start":{"line":79,"column":33},"end":{"line":88,"column":1}},"line":79},"13":{"name":"lt","decl":{"start":{"line":90,"column":9},"end":{"line":90,"column":11}},"loc":{"start":{"line":90,"column":41},"end":{"line":95,"column":1}},"line":90},"14":{"name":"gt","decl":{"start":{"line":97,"column":9},"end":{"line":97,"column":11}},"loc":{"start":{"line":97,"column":41},"end":{"line":102,"column":1}},"line":97},"15":{"name":"eq","decl":{"start":{"line":104,"column":9},"end":{"line":104,"column":11}},"loc":{"start":{"line":104,"column":41},"end":{"line":109,"column":1}},"line":104},"16":{"name":"is","decl":{"start":{"line":111,"column":9},"end":{"line":111,"column":11}},"loc":{"start":{"line":111,"column":41},"end":{"line":128,"column":1}},"line":111},"17":{"name":"validComparison","decl":{"start":{"line":130,"column":9},"end":{"line":130,"column":24}},"loc":{"start":{"line":130,"column":42},"end":{"line":134,"column":1}},"line":130},"18":{"name":"getOrderKey","decl":{"start":{"line":136,"column":9},"end":{"line":136,"column":20}},"loc":{"start":{"line":136,"column":28},"end":{"line":139,"column":1}},"line":136},"19":{"name":"getData","decl":{"start":{"line":141,"column":15},"end":{"line":141,"column":22}},"loc":{"start":{"line":141,"column":25},"end":{"line":166,"column":1}},"line":141},"20":{"name":"(anonymous_20)","decl":{"start":{"line":143,"column":37},"end":{"line":143,"column":38}},"loc":{"start":{"line":143,"column":57},"end":{"line":153,"column":5}},"line":143}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"type":"binary-expr","locations":[{"start":{"line":13,"column":26},"end":{"line":13,"column":30}},{"start":{"line":13,"column":34},"end":{"line":13,"column":57}},{"start":{"line":13,"column":63},"end":{"line":17,"column":1}}],"line":13},"9":{"loc":{"start":{"line":13,"column":63},"end":{"line":17,"column":1}},"type":"cond-expr","locations":[{"start":{"line":13,"column":80},"end":{"line":15,"column":1}},{"start":{"line":15,"column":5},"end":{"line":17,"column":1}}],"line":13},"10":{"loc":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"type":"binary-expr","locations":[{"start":{"line":18,"column":20},"end":{"line":18,"column":24}},{"start":{"line":18,"column":28},"end":{"line":18,"column":45}},{"start":{"line":18,"column":50},"end":{"line":24,"column":1}}],"line":18},"11":{"loc":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},{"start":{"line":19,"column":4},"end":{"line":19,"column":42}}],"line":19},"12":{"loc":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"type":"binary-expr","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":11}},{"start":{"line":19,"column":15},"end":{"line":19,"column":29}}],"line":19},"13":{"loc":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},{"start":{"line":21,"column":4},"end":{"line":21,"column":141}}],"line":21},"14":{"loc":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},{"start":{"line":21,"column":40},"end":{"line":21,"column":141}}],"line":21},"15":{"loc":{"start":{"line":21,"column":44},"end":{"line":21,"column":107}},"type":"binary-expr","locations":[{"start":{"line":21,"column":44},"end":{"line":21,"column":59}},{"start":{"line":21,"column":63},"end":{"line":21,"column":107}}],"line":21},"16":{"loc":{"start":{"line":41,"column":8},"end":{"line":51,"column":9}},"type":"if","locations":[{"start":{"line":41,"column":8},"end":{"line":51,"column":9}},{"start":{"line":41,"column":8},"end":{"line":51,"column":9}}],"line":41},"17":{"loc":{"start":{"line":63,"column":24},"end":{"line":63,"column":69}},"type":"cond-expr","locations":[{"start":{"line":63,"column":53},"end":{"line":63,"column":57}},{"start":{"line":63,"column":60},"end":{"line":63,"column":69}}],"line":63},"18":{"loc":{"start":{"line":73,"column":4},"end":{"line":75,"column":5}},"type":"if","locations":[{"start":{"line":73,"column":4},"end":{"line":75,"column":5}},{"start":{"line":73,"column":4},"end":{"line":75,"column":5}}],"line":73},"19":{"loc":{"start":{"line":80,"column":4},"end":{"line":87,"column":5}},"type":"if","locations":[{"start":{"line":80,"column":4},"end":{"line":87,"column":5}},{"start":{"line":80,"column":4},"end":{"line":87,"column":5}}],"line":80},"20":{"loc":{"start":{"line":84,"column":8},"end":{"line":86,"column":9}},"type":"if","locations":[{"start":{"line":84,"column":8},"end":{"line":86,"column":9}},{"start":{"line":84,"column":8},"end":{"line":86,"column":9}}],"line":84},"21":{"loc":{"start":{"line":91,"column":4},"end":{"line":93,"column":5}},"type":"if","locations":[{"start":{"line":91,"column":4},"end":{"line":93,"column":5}},{"start":{"line":91,"column":4},"end":{"line":93,"column":5}}],"line":91},"22":{"loc":{"start":{"line":98,"column":4},"end":{"line":100,"column":5}},"type":"if","locations":[{"start":{"line":98,"column":4},"end":{"line":100,"column":5}},{"start":{"line":98,"column":4},"end":{"line":100,"column":5}}],"line":98},"23":{"loc":{"start":{"line":105,"column":4},"end":{"line":107,"column":5}},"type":"if","locations":[{"start":{"line":105,"column":4},"end":{"line":107,"column":5}},{"start":{"line":105,"column":4},"end":{"line":107,"column":5}}],"line":105},"24":{"loc":{"start":{"line":112,"column":4},"end":{"line":126,"column":5}},"type":"if","locations":[{"start":{"line":112,"column":4},"end":{"line":126,"column":5}},{"start":{"line":112,"column":4},"end":{"line":126,"column":5}}],"line":112},"25":{"loc":{"start":{"line":114,"column":8},"end":{"line":125,"column":9}},"type":"if","locations":[{"start":{"line":114,"column":8},"end":{"line":125,"column":9}},{"start":{"line":114,"column":8},"end":{"line":125,"column":9}}],"line":114},"26":{"loc":{"start":{"line":114,"column":12},"end":{"line":114,"column":58}},"type":"binary-expr","locations":[{"start":{"line":114,"column":12},"end":{"line":114,"column":34}},{"start":{"line":114,"column":38},"end":{"line":114,"column":58}}],"line":114},"27":{"loc":{"start":{"line":117,"column":13},"end":{"line":125,"column":9}},"type":"if","locations":[{"start":{"line":117,"column":13},"end":{"line":125,"column":9}},{"start":{"line":117,"column":13},"end":{"line":125,"column":9}}],"line":117},"28":{"loc":{"start":{"line":120,"column":13},"end":{"line":125,"column":9}},"type":"if","locations":[{"start":{"line":120,"column":13},"end":{"line":125,"column":9}},{"start":{"line":120,"column":13},"end":{"line":125,"column":9}}],"line":120}},"s":{"0":1,"1":149,"2":149,"3":149,"4":149,"5":149,"6":8,"7":149,"8":0,"9":0,"10":0,"11":1,"12":1,"13":0,"14":1,"15":1,"16":0,"17":1,"18":1,"19":1,"20":149,"21":149,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":4,"29":4,"30":4,"31":4,"32":4,"33":4,"34":1,"35":4,"36":23780,"37":23780,"38":23776,"39":23776,"40":23776,"41":23776,"42":23776,"43":0,"44":4,"45":1,"46":23776,"47":258448,"48":1,"49":15,"50":15,"51":0,"52":15,"53":1,"54":15,"55":8,"56":7,"57":0,"58":1,"59":64612,"60":64612,"61":0,"62":1,"63":193836,"64":193836,"65":0,"66":1,"67":193836,"68":193836,"69":0,"70":1,"71":193836,"72":193836,"73":193836,"74":0,"75":193836,"76":0,"77":193836,"78":0,"79":193836,"80":0,"81":1,"82":15,"83":15,"84":15,"85":1,"86":4,"87":4,"88":1,"89":4,"90":4,"91":4,"92":4,"93":4,"94":4,"95":4,"96":0,"97":4,"98":4,"99":4,"100":4,"101":4,"102":4,"103":4,"104":0,"105":1},"f":{"0":149,"1":8,"2":0,"3":1,"4":0,"5":1,"6":4,"7":4,"8":23780,"9":23776,"10":258448,"11":15,"12":15,"13":64612,"14":193836,"15":193836,"16":193836,"17":15,"18":4,"19":4,"20":4},"b":{"0":[1,1,1],"1":[1,0],"2":[149,0],"3":[149,0],"4":[149,149],"5":[0,149],"6":[149,0],"7":[0,0],"8":[1,1,1],"9":[1,0],"10":[1,1,1],"11":[0,1],"12":[1,1],"13":[1,0],"14":[149,0],"15":[149,149],"16":[23776,4],"17":[0,258448],"18":[0,15],"19":[8,7],"20":[0,7],"21":[64612,0],"22":[193836,0],"23":[193836,0],"24":[193836,0],"25":[0,193836],"26":[193836,0],"27":[0,193836],"28":[0,193836]},"inputSourceMap":{"version":3,"file":"/Users/ryankim/project_team203/src/controller/HelperFunctions.ts","sources":["/Users/ryankim/project_team203/src/controller/HelperFunctions.ts"],"names":[],"mappings":"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","sourcesContent":["import {InsightDatasetKind, InsightError, InsightResult} from \"./IInsightFacade\";\nimport JSZip = require(\"jszip\");\nimport * as fs from \"fs-extra\";\n\nexport function makeInsightResult(id: string, kind: InsightDatasetKind, array: any[]): InsightResult {\n\tlet cachedData: {[key: string]: any} = {};\n\tcachedData[\"id\"] = id;\n\tcachedData[\"kind\"] = kind;\n\tcachedData[\"numRows\"] = array.length;\n\tcachedData[\"data\"] = array;\n\treturn cachedData;\n}\n\nexport async function getFilPromises(fileNames: string[], zip: JSZip, id: string) {\n\tlet filePromises = fileNames.map(async (fileName) => {\n\t\tlet file = zip.file(fileName);\n\t\tif (file != null) {\n\t\t\ttry {\n\t\t\t\tlet jsonContent = await file.async(\"string\");\n\t\t\t\tlet jsonObject = JSON.parse(jsonContent);\n\t\t\t\tlet dataPoints = jsonObject.result;\n\t\t\t\treturn getMap(dataPoints, id);\n\t\t\t} catch (e) {\n\t\t\t\tthrow new InsightError(\"Error processing file: \" + fileName);\n\t\t\t}\n\t\t}\n\t});\n\treturn filePromises;\n}\n\nexport function getMap(dataPoints: any, id: string) {\n\treturn dataPoints.map((data: any) => ({\n\t\t[`${id}_uuid`]: data.id,\n\t\t[`${id}_id`]: data.Course,\n\t\t[`${id}_title`]: data.Title,\n\t\t[`${id}_instructor`]: data.Professor,\n\t\t[`${id}_dept`]: data.Subject,\n\t\t[`${id}_year`]: data.Subject === \"overall\" ? 1900 : data.Year,\n\t\t[`${id}_avg`]: data.Avg,\n\t\t[`${id}_pass`]: data.Pass,\n\t\t[`${id}_fail`]: data.Fail,\n\t\t[`${id}_audit`]: data.Audit,\n\t}));\n}\n\nexport function getID(key: string): string {\n\tlet parts = key.split(\"_\");\n\tif (parts.length > 2) {\n\t\tthrow new InsightError(\"Too many underscores in id\");\n\t}\n\treturn parts[0];\n}\n\nexport function assignID(currentID: string, id: string[]) {\n\tif (id[0] === \"null\") {\n\t\tid[0] = currentID;\n\t} else {\n\t\tif (id[0] !== currentID) {\n\t\t\tthrow new InsightError(\"Can't have multiple sections!\");\n\t\t}\n\t}\n}\n\nexport function lt(ckey: string, cvalue: number, skeys: string[], svalue: any[]): boolean {\n\tif (skeys.includes(ckey)) {\n\t\treturn cvalue > (svalue[skeys.indexOf(ckey)] as number);\n\t}\n\treturn false;\n}\n\nexport function gt(ckey: string, cvalue: number, skeys: string[], svalue: any[]): boolean {\n\tif (skeys.includes(ckey)) {\n\t\treturn cvalue < (svalue[skeys.indexOf(ckey)] as number);\n\t}\n\treturn false;\n}\n\nexport function eq(ckey: string, cvalue: number, skeys: string[], svalue: any[]): boolean {\n\tif (skeys.includes(ckey)) {\n\t\treturn cvalue === (svalue[skeys.indexOf(ckey)] as number);\n\t}\n\treturn false;\n}\n\nexport function is(ckey: string, cvalue: string, skeys: string[], svalue: any[]): boolean {\n\tif (skeys.includes(ckey)) {\n\t\tlet string = svalue[skeys.indexOf(ckey)] as string;\n\t\tif (string.startsWith(\"*\") && string.endsWith(\"*\")) {\n\t\t\treturn string.includes(cvalue);\n\t\t} else if (string.startsWith(\"*\")) {\n\t\t\treturn string.startsWith(cvalue);\n\t\t} else if (string.endsWith(\"*\")) {\n\t\t\treturn string.endsWith(cvalue);\n\t\t} else {\n\t\t\treturn string === cvalue;\n\t\t}\n\t}\n\treturn true;\n}\n\nexport function validComparison(query: object, id: string[], type: string): boolean {\n\tlet currentID = getID(Object.keys(query)[0]);\n\tassignID(currentID, id);\n\treturn typeof Object.values(query)[0] === type;\n}\n\nexport function getOrderKey(query: object): string {\n\tlet columnsPair = Object.entries(query)[1];\n\treturn Object.values(columnsPair)[1];\n}\n\nexport async function getData() {\n\tlet fileNames = await fs.readdir(\"./data\");\n\tlet filePromises = fileNames.map(async (fileName) => {\n\t\ttry {\n\t\t\tlet fileContent = await fs.readJson(`./data/${fileName}`);\n\t\t\tlet jsonString = JSON.stringify(fileContent);\n\t\t\tlet data = JSON.parse(jsonString);\n\t\t\treturn data.data;\n\t\t} catch (err) {\n\t\t\tthrow new InsightError(\"Corrupted persisted file\");\n\t\t}\n\t});\n\tlet array: object[] = [];\n\ttry {\n\t\tlet rawResults: any[] = await Promise.all(filePromises);\n\t\tlet refinedResults: object[][] = rawResults.filter(Array.isArray);\n\t\tfor (let result of refinedResults) {\n\t\t\tarray = array.concat(result);\n\t\t}\n\t\treturn array;\n\t} catch (err) {\n\t\tthrow new InsightError(\"Blah\");\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"81352cea3a8b9b249873049f7adf244382f28f14","contentHash":"d127f679356bb9e7a67e764883d1eb0730c33c789b7a89f9943d439a584ad19a"}}