{"C:\\Users\\Winston\\IdeaProjects\\project_team203\\src\\controller\\IInsightFacade.ts":{"path":"C:\\Users\\Winston\\IdeaProjects\\project_team203\\src\\controller\\IInsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":113}},"2":{"start":{"line":5,"column":0},"end":{"line":8,"column":89}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":48}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":42}},"5":{"start":{"line":11,"column":8},"end":{"line":11,"column":23}},"6":{"start":{"line":12,"column":8},"end":{"line":12,"column":52}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":36}},"8":{"start":{"line":18,"column":8},"end":{"line":18,"column":23}},"9":{"start":{"line":19,"column":8},"end":{"line":19,"column":53}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":38}},"11":{"start":{"line":25,"column":8},"end":{"line":25,"column":23}},"12":{"start":{"line":26,"column":8},"end":{"line":26,"column":59}},"13":{"start":{"line":29,"column":0},"end":{"line":29,"column":50}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":1},"end":{"line":5,"column":2}},"loc":{"start":{"line":5,"column":31},"end":{"line":8,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":25},"end":{"line":13,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":25},"end":{"line":20,"column":5}},"line":17},"3":{"name":"(anonymous_3)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":25},"end":{"line":27,"column":5}},"line":24}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":24},"end":{"line":8,"column":87}},"type":"binary-expr","locations":[{"start":{"line":8,"column":24},"end":{"line":8,"column":50}},{"start":{"line":8,"column":55},"end":{"line":8,"column":86}}],"line":8}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":1,"11":0,"12":0,"13":1},"f":{"0":1,"1":1,"2":0,"3":0},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"C:/Users/Winston/IdeaProjects/project_team203/src/controller/IInsightFacade.ts","sources":["C:/Users/Winston/IdeaProjects/project_team203/src/controller/IInsightFacade.ts"],"names":[],"mappings":";;;AAMA,IAAY,kBAGX;AAHD,WAAY,kBAAkB;IAC7B,2CAAqB,CAAA;IACrB,qCAAe,CAAA;AAChB,CAAC,EAHW,kBAAkB,GAAlB,0BAAkB,KAAlB,0BAAkB,QAG7B;AAYD,MAAa,YAAa,SAAQ,KAAK;IACtC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IAC7C,CAAC;CACD;AALD,oCAKC;AAED,MAAa,aAAc,SAAQ,KAAK;IACvC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;IAC9C,CAAC;CACD;AALD,sCAKC;AAED,MAAa,mBAAoB,SAAQ,KAAK;IAC7C,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,mBAAmB,CAAC,CAAC;IACpD,CAAC;CACD;AALD,kDAKC","sourcesContent":["/*\r\n * This is the primary high-level API for the project. In this folder there should be:\r\n * A class called InsightFacade, this should be in a file called InsightFacade.ts.\r\n * You should not change this interface at all or the test suite will not work.\r\n */\r\n\r\nexport enum InsightDatasetKind {\r\n\tSections = \"sections\",\r\n\tRooms = \"rooms\",\r\n}\r\n\r\nexport interface InsightDataset {\r\n\tid: string;\r\n\tkind: InsightDatasetKind;\r\n\tnumRows: number;\r\n}\r\n\r\nexport interface InsightResult {\r\n\t[key: string]: string | number;\r\n}\r\n\r\nexport class InsightError extends Error {\r\n\tconstructor(message?: string) {\r\n\t\tsuper(message);\r\n\t\tError.captureStackTrace(this, InsightError);\r\n\t}\r\n}\r\n\r\nexport class NotFoundError extends Error {\r\n\tconstructor(message?: string) {\r\n\t\tsuper(message);\r\n\t\tError.captureStackTrace(this, NotFoundError);\r\n\t}\r\n}\r\n\r\nexport class ResultTooLargeError extends Error {\r\n\tconstructor(message?: string) {\r\n\t\tsuper(message);\r\n\t\tError.captureStackTrace(this, ResultTooLargeError);\r\n\t}\r\n}\r\n\r\nexport interface IInsightFacade {\r\n\t/**\r\n\t * Add a dataset to insightUBC.\r\n\t *\r\n\t * @param id  The id of the dataset being added. Follows the format /^[^_]+$/\r\n\t * @param content  The base64 content of the dataset. This content should be in the form of a serialized zip file.\r\n\t * @param kind  The kind of the dataset\r\n\t *\r\n\t * @return Promise <string[]>\r\n\t *\r\n\t * The promise should fulfill on a successful add, reject for any failures.\r\n\t * The promise should fulfill with a string array,\r\n\t * containing the ids of all currently added datasets upon a successful add.\r\n\t * The promise should reject with an InsightError describing the error.\r\n\t *\r\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\r\n\t * If id is the same as the id of an already added dataset, the dataset should be rejected and not saved.\r\n\t *\r\n\t * After receiving the dataset, it should be processed into a data structure of\r\n\t * your design. The processed data structure should be persisted to disk; your\r\n\t * system should be able to load this persisted value into memory for answering\r\n\t * queries.\r\n\t *\r\n\t * Ultimately, a dataset must be added or loaded from disk before queries can\r\n\t * be successfully answered.\r\n\t */\r\n\taddDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]>;\r\n\r\n\t/**\r\n\t * Remove a dataset from insightUBC.\r\n\t *\r\n\t * @param id  The id of the dataset to remove. Follows the format /^[^_]+$/\r\n\t *\r\n\t * @return Promise <string>\r\n\t *\r\n\t * The promise should fulfill upon a successful removal, reject on any error.\r\n\t * Attempting to remove a dataset that hasn't been added yet counts as an error.\r\n\t *\r\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\r\n\t *\r\n\t * The promise should fulfill the id of the dataset that was removed.\r\n\t * The promise should reject with a NotFoundError (if a valid id was not yet added)\r\n\t * or an InsightError (invalid id or any other source of failure) describing the error.\r\n\t *\r\n\t * This will delete both disk and memory caches for the dataset for the id meaning\r\n\t * that subsequent queries for that id should fail unless a new addDataset happens first.\r\n\t */\r\n\tremoveDataset(id: string): Promise<string>;\r\n\r\n\t/**\r\n\t * Perform a query on insightUBC.\r\n\t *\r\n\t * @param query  The query to be performed.\r\n\t *\r\n\t * If a query is incorrectly formatted, references a dataset not added (in memory or on disk),\r\n\t * or references multiple datasets, it should be rejected.\r\n\t *\r\n\t * @return Promise <InsightResult[]>\r\n\t *\r\n\t * The promise should fulfill with an array of results.\r\n\t * The promise should reject with a ResultTooLargeError (if the query returns too many results)\r\n\t * or an InsightError (for any other source of failure) describing the error.\r\n\t */\r\n\tperformQuery(query: unknown): Promise<InsightResult[]>;\r\n\r\n\t/**\r\n\t * List all currently added datasets, their types, and number of rows.\r\n\t *\r\n\t * @return Promise <InsightDataset[]>\r\n\t * The promise should fulfill an array of currently added InsightDatasets, and will only fulfill.\r\n\t */\r\n\tlistDatasets(): Promise<InsightDataset[]>;\r\n}\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ccf31535f314a6afad39179dddbc7f58c3a810c3","contentHash":"4f0f1dfbee8fa5e393194fb6c29f92b3cc8b692e4efe3c61f7bd54df3b460d81"},"C:\\Users\\Winston\\IdeaProjects\\project_team203\\src\\controller\\InsightFacade.ts":{"path":"C:\\Users\\Winston\\IdeaProjects\\project_team203\\src\\controller\\InsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":25},"end":{"line":6,"column":52}},"4":{"start":{"line":7,"column":16},"end":{"line":7,"column":49}},"5":{"start":{"line":8,"column":19},"end":{"line":8,"column":55}},"6":{"start":{"line":11,"column":8},"end":{"line":11,"column":49}},"7":{"start":{"line":14,"column":8},"end":{"line":16,"column":9}},"8":{"start":{"line":15,"column":12},"end":{"line":15,"column":83}},"9":{"start":{"line":17,"column":18},"end":{"line":17,"column":76}},"10":{"start":{"line":18,"column":21},"end":{"line":18,"column":42}},"11":{"start":{"line":19,"column":8},"end":{"line":21,"column":9}},"12":{"start":{"line":20,"column":12},"end":{"line":20,"column":96}},"13":{"start":{"line":22,"column":27},"end":{"line":22,"column":36}},"14":{"start":{"line":23,"column":24},"end":{"line":23,"column":49}},"15":{"start":{"line":24,"column":27},"end":{"line":48,"column":10}},"16":{"start":{"line":25,"column":23},"end":{"line":25,"column":41}},"17":{"start":{"line":26,"column":12},"end":{"line":47,"column":13}},"18":{"start":{"line":27,"column":16},"end":{"line":46,"column":17}},"19":{"start":{"line":28,"column":38},"end":{"line":28,"column":64}},"20":{"start":{"line":29,"column":37},"end":{"line":29,"column":60}},"21":{"start":{"line":30,"column":37},"end":{"line":30,"column":54}},"22":{"start":{"line":31,"column":20},"end":{"line":42,"column":24}},"23":{"start":{"line":31,"column":53},"end":{"line":42,"column":21}},"24":{"start":{"line":45,"column":20},"end":{"line":45,"column":98}},"25":{"start":{"line":49,"column":8},"end":{"line":62,"column":9}},"26":{"start":{"line":50,"column":29},"end":{"line":50,"column":60}},"27":{"start":{"line":51,"column":33},"end":{"line":51,"column":65}},"28":{"start":{"line":52,"column":24},"end":{"line":52,"column":26}},"29":{"start":{"line":53,"column":12},"end":{"line":55,"column":13}},"30":{"start":{"line":54,"column":16},"end":{"line":54,"column":45}},"31":{"start":{"line":56,"column":28},"end":{"line":56,"column":67}},"32":{"start":{"line":57,"column":12},"end":{"line":57,"column":57}},"33":{"start":{"line":58,"column":12},"end":{"line":58,"column":74}},"34":{"start":{"line":61,"column":12},"end":{"line":61,"column":39}},"35":{"start":{"line":63,"column":8},"end":{"line":63,"column":39}},"36":{"start":{"line":66,"column":25},"end":{"line":66,"column":27}},"37":{"start":{"line":67,"column":8},"end":{"line":67,"column":30}},"38":{"start":{"line":68,"column":8},"end":{"line":68,"column":34}},"39":{"start":{"line":69,"column":8},"end":{"line":69,"column":45}},"40":{"start":{"line":70,"column":8},"end":{"line":70,"column":35}},"41":{"start":{"line":71,"column":8},"end":{"line":71,"column":26}},"42":{"start":{"line":74,"column":8},"end":{"line":74,"column":35}},"43":{"start":{"line":77,"column":20},"end":{"line":77,"column":34}},"44":{"start":{"line":78,"column":8},"end":{"line":80,"column":9}},"45":{"start":{"line":79,"column":12},"end":{"line":79,"column":82}},"46":{"start":{"line":81,"column":8},"end":{"line":81,"column":24}},"47":{"start":{"line":84,"column":8},"end":{"line":91,"column":9}},"48":{"start":{"line":85,"column":12},"end":{"line":85,"column":30}},"49":{"start":{"line":88,"column":12},"end":{"line":90,"column":13}},"50":{"start":{"line":89,"column":16},"end":{"line":89,"column":89}},"51":{"start":{"line":94,"column":24},"end":{"line":94,"column":57}},"52":{"start":{"line":95,"column":8},"end":{"line":95,"column":37}},"53":{"start":{"line":96,"column":8},"end":{"line":96,"column":57}},"54":{"start":{"line":99,"column":21},"end":{"line":99,"column":25}},"55":{"start":{"line":100,"column":8},"end":{"line":119,"column":11}},"56":{"start":{"line":101,"column":12},"end":{"line":118,"column":13}},"57":{"start":{"line":104,"column":20},"end":{"line":106,"column":21}},"58":{"start":{"line":105,"column":24},"end":{"line":105,"column":72}},"59":{"start":{"line":107,"column":20},"end":{"line":107,"column":26}},"60":{"start":{"line":111,"column":20},"end":{"line":111,"column":78}},"61":{"start":{"line":113,"column":20},"end":{"line":113,"column":78}},"62":{"start":{"line":115,"column":20},"end":{"line":115,"column":67}},"63":{"start":{"line":117,"column":20},"end":{"line":117,"column":90}},"64":{"start":{"line":120,"column":8},"end":{"line":120,"column":22}},"65":{"start":{"line":123,"column":19},"end":{"line":123,"column":37}},"66":{"start":{"line":124,"column":8},"end":{"line":126,"column":9}},"67":{"start":{"line":125,"column":12},"end":{"line":125,"column":67}},"68":{"start":{"line":127,"column":22},"end":{"line":127,"column":24}},"69":{"start":{"line":128,"column":20},"end":{"line":128,"column":26}},"70":{"start":{"line":129,"column":8},"end":{"line":143,"column":11}},"71":{"start":{"line":130,"column":12},"end":{"line":142,"column":13}},"72":{"start":{"line":132,"column":20},"end":{"line":134,"column":21}},"73":{"start":{"line":133,"column":24},"end":{"line":133,"column":93}},"74":{"start":{"line":135,"column":20},"end":{"line":135,"column":36}},"75":{"start":{"line":136,"column":20},"end":{"line":136,"column":26}},"76":{"start":{"line":138,"column":20},"end":{"line":138,"column":34}},"77":{"start":{"line":139,"column":20},"end":{"line":139,"column":26}},"78":{"start":{"line":141,"column":20},"end":{"line":141,"column":83}},"79":{"start":{"line":144,"column":8},"end":{"line":146,"column":9}},"80":{"start":{"line":145,"column":12},"end":{"line":145,"column":94}},"81":{"start":{"line":147,"column":8},"end":{"line":151,"column":9}},"82":{"start":{"line":148,"column":12},"end":{"line":150,"column":13}},"83":{"start":{"line":149,"column":16},"end":{"line":149,"column":83}},"84":{"start":{"line":154,"column":8},"end":{"line":156,"column":9}},"85":{"start":{"line":155,"column":12},"end":{"line":155,"column":56}},"86":{"start":{"line":157,"column":8},"end":{"line":157,"column":21}},"87":{"start":{"line":160,"column":8},"end":{"line":162,"column":9}},"88":{"start":{"line":161,"column":12},"end":{"line":161,"column":56}},"89":{"start":{"line":163,"column":8},"end":{"line":163,"column":21}},"90":{"start":{"line":166,"column":8},"end":{"line":168,"column":9}},"91":{"start":{"line":167,"column":12},"end":{"line":167,"column":58}},"92":{"start":{"line":169,"column":8},"end":{"line":169,"column":21}},"93":{"start":{"line":172,"column":8},"end":{"line":186,"column":9}},"94":{"start":{"line":173,"column":25},"end":{"line":173,"column":52}},"95":{"start":{"line":174,"column":12},"end":{"line":185,"column":13}},"96":{"start":{"line":175,"column":16},"end":{"line":175,"column":47}},"97":{"start":{"line":177,"column":17},"end":{"line":185,"column":13}},"98":{"start":{"line":178,"column":16},"end":{"line":178,"column":49}},"99":{"start":{"line":180,"column":17},"end":{"line":185,"column":13}},"100":{"start":{"line":181,"column":16},"end":{"line":181,"column":47}},"101":{"start":{"line":184,"column":16},"end":{"line":184,"column":41}},"102":{"start":{"line":187,"column":8},"end":{"line":187,"column":20}},"103":{"start":{"line":190,"column":21},"end":{"line":190,"column":25}},"104":{"start":{"line":191,"column":20},"end":{"line":191,"column":40}},"105":{"start":{"line":192,"column":22},"end":{"line":192,"column":44}},"106":{"start":{"line":193,"column":8},"end":{"line":221,"column":11}},"107":{"start":{"line":194,"column":23},"end":{"line":194,"column":44}},"108":{"start":{"line":195,"column":25},"end":{"line":195,"column":48}},"109":{"start":{"line":196,"column":12},"end":{"line":220,"column":13}},"110":{"start":{"line":198,"column":20},"end":{"line":200,"column":21}},"111":{"start":{"line":199,"column":24},"end":{"line":199,"column":76}},"112":{"start":{"line":201,"column":20},"end":{"line":201,"column":26}},"113":{"start":{"line":203,"column":20},"end":{"line":203,"column":35}},"114":{"start":{"line":204,"column":20},"end":{"line":206,"column":21}},"115":{"start":{"line":205,"column":24},"end":{"line":205,"column":76}},"116":{"start":{"line":207,"column":20},"end":{"line":207,"column":26}},"117":{"start":{"line":209,"column":20},"end":{"line":209,"column":74}},"118":{"start":{"line":211,"column":20},"end":{"line":211,"column":74}},"119":{"start":{"line":213,"column":20},"end":{"line":213,"column":74}},"120":{"start":{"line":215,"column":20},"end":{"line":215,"column":74}},"121":{"start":{"line":217,"column":20},"end":{"line":217,"column":71}},"122":{"start":{"line":219,"column":20},"end":{"line":219,"column":90}},"123":{"start":{"line":222,"column":8},"end":{"line":222,"column":22}},"124":{"start":{"line":225,"column":26},"end":{"line":225,"column":47}},"125":{"start":{"line":226,"column":27},"end":{"line":226,"column":50}},"126":{"start":{"line":227,"column":22},"end":{"line":227,"column":30}},"127":{"start":{"line":228,"column":25},"end":{"line":228,"column":72}},"128":{"start":{"line":229,"column":22},"end":{"line":229,"column":42}},"129":{"start":{"line":230,"column":30},"end":{"line":230,"column":32}},"130":{"start":{"line":231,"column":8},"end":{"line":238,"column":9}},"131":{"start":{"line":232,"column":12},"end":{"line":234,"column":13}},"132":{"start":{"line":233,"column":16},"end":{"line":233,"column":46}},"133":{"start":{"line":235,"column":12},"end":{"line":237,"column":13}},"134":{"start":{"line":236,"column":16},"end":{"line":236,"column":89}},"135":{"start":{"line":239,"column":8},"end":{"line":239,"column":59}},"136":{"start":{"line":240,"column":26},"end":{"line":240,"column":65}},"137":{"start":{"line":241,"column":22},"end":{"line":241,"column":51}},"138":{"start":{"line":242,"column":8},"end":{"line":249,"column":9}},"139":{"start":{"line":243,"column":29},"end":{"line":243,"column":48}},"140":{"start":{"line":244,"column":12},"end":{"line":248,"column":13}},"141":{"start":{"line":245,"column":16},"end":{"line":247,"column":17}},"142":{"start":{"line":246,"column":20},"end":{"line":246,"column":39}},"143":{"start":{"line":250,"column":23},"end":{"line":250,"column":61}},"144":{"start":{"line":251,"column":8},"end":{"line":251,"column":68}},"145":{"start":{"line":251,"column":40},"end":{"line":251,"column":65}},"146":{"start":{"line":252,"column":8},"end":{"line":252,"column":48}},"147":{"start":{"line":255,"column":26},"end":{"line":255,"column":50}},"148":{"start":{"line":256,"column":8},"end":{"line":256,"column":45}},"149":{"start":{"line":259,"column":24},"end":{"line":259,"column":66}},"150":{"start":{"line":260,"column":27},"end":{"line":270,"column":10}},"151":{"start":{"line":261,"column":12},"end":{"line":269,"column":13}},"152":{"start":{"line":262,"column":34},"end":{"line":262,"column":89}},"153":{"start":{"line":263,"column":33},"end":{"line":263,"column":60}},"154":{"start":{"line":264,"column":27},"end":{"line":264,"column":49}},"155":{"start":{"line":265,"column":16},"end":{"line":265,"column":33}},"156":{"start":{"line":268,"column":16},"end":{"line":268,"column":84}},"157":{"start":{"line":271,"column":20},"end":{"line":271,"column":22}},"158":{"start":{"line":272,"column":8},"end":{"line":282,"column":9}},"159":{"start":{"line":273,"column":29},"end":{"line":273,"column":60}},"160":{"start":{"line":274,"column":33},"end":{"line":274,"column":65}},"161":{"start":{"line":275,"column":12},"end":{"line":277,"column":13}},"162":{"start":{"line":276,"column":16},"end":{"line":276,"column":45}},"163":{"start":{"line":278,"column":12},"end":{"line":278,"column":25}},"164":{"start":{"line":281,"column":12},"end":{"line":281,"column":60}},"165":{"start":{"line":285,"column":24},"end":{"line":285,"column":66}},"166":{"start":{"line":286,"column":27},"end":{"line":300,"column":10}},"167":{"start":{"line":287,"column":12},"end":{"line":299,"column":13}},"168":{"start":{"line":288,"column":34},"end":{"line":288,"column":89}},"169":{"start":{"line":289,"column":33},"end":{"line":289,"column":60}},"170":{"start":{"line":290,"column":27},"end":{"line":290,"column":49}},"171":{"start":{"line":291,"column":16},"end":{"line":295,"column":18}},"172":{"start":{"line":298,"column":16},"end":{"line":298,"column":84}},"173":{"start":{"line":302,"column":8},"end":{"line":307,"column":9}},"174":{"start":{"line":303,"column":12},"end":{"line":303,"column":54}},"175":{"start":{"line":306,"column":12},"end":{"line":306,"column":60}},"176":{"start":{"line":308,"column":8},"end":{"line":308,"column":40}},"177":{"start":{"line":311,"column":0},"end":{"line":311,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":18},"end":{"line":12,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":40},"end":{"line":64,"column":5}},"line":13},"3":{"name":"(anonymous_3)","decl":{"start":{"line":24,"column":41},"end":{"line":24,"column":42}},"loc":{"start":{"line":24,"column":61},"end":{"line":48,"column":9}},"line":24},"4":{"name":"(anonymous_4)","decl":{"start":{"line":31,"column":42},"end":{"line":31,"column":43}},"loc":{"start":{"line":31,"column":53},"end":{"line":42,"column":21}},"line":31},"5":{"name":"(anonymous_5)","decl":{"start":{"line":65,"column":4},"end":{"line":65,"column":5}},"loc":{"start":{"line":65,"column":39},"end":{"line":72,"column":5}},"line":65},"6":{"name":"(anonymous_6)","decl":{"start":{"line":73,"column":4},"end":{"line":73,"column":5}},"loc":{"start":{"line":73,"column":28},"end":{"line":75,"column":5}},"line":73},"7":{"name":"(anonymous_7)","decl":{"start":{"line":76,"column":4},"end":{"line":76,"column":5}},"loc":{"start":{"line":76,"column":15},"end":{"line":82,"column":5}},"line":76},"8":{"name":"(anonymous_8)","decl":{"start":{"line":83,"column":4},"end":{"line":83,"column":5}},"loc":{"start":{"line":83,"column":28},"end":{"line":92,"column":5}},"line":83},"9":{"name":"(anonymous_9)","decl":{"start":{"line":93,"column":4},"end":{"line":93,"column":5}},"loc":{"start":{"line":93,"column":37},"end":{"line":97,"column":5}},"line":93},"10":{"name":"(anonymous_10)","decl":{"start":{"line":98,"column":4},"end":{"line":98,"column":5}},"loc":{"start":{"line":98,"column":29},"end":{"line":121,"column":5}},"line":98},"11":{"name":"(anonymous_11)","decl":{"start":{"line":100,"column":38},"end":{"line":100,"column":39}},"loc":{"start":{"line":100,"column":56},"end":{"line":119,"column":9}},"line":100},"12":{"name":"(anonymous_12)","decl":{"start":{"line":122,"column":4},"end":{"line":122,"column":5}},"loc":{"start":{"line":122,"column":30},"end":{"line":152,"column":5}},"line":122},"13":{"name":"(anonymous_13)","decl":{"start":{"line":129,"column":38},"end":{"line":129,"column":39}},"loc":{"start":{"line":129,"column":56},"end":{"line":143,"column":9}},"line":129},"14":{"name":"(anonymous_14)","decl":{"start":{"line":153,"column":4},"end":{"line":153,"column":5}},"loc":{"start":{"line":153,"column":36},"end":{"line":158,"column":5}},"line":153},"15":{"name":"(anonymous_15)","decl":{"start":{"line":159,"column":4},"end":{"line":159,"column":5}},"loc":{"start":{"line":159,"column":36},"end":{"line":164,"column":5}},"line":159},"16":{"name":"(anonymous_16)","decl":{"start":{"line":165,"column":4},"end":{"line":165,"column":5}},"loc":{"start":{"line":165,"column":36},"end":{"line":170,"column":5}},"line":165},"17":{"name":"(anonymous_17)","decl":{"start":{"line":171,"column":4},"end":{"line":171,"column":5}},"loc":{"start":{"line":171,"column":36},"end":{"line":188,"column":5}},"line":171},"18":{"name":"(anonymous_18)","decl":{"start":{"line":189,"column":4},"end":{"line":189,"column":5}},"loc":{"start":{"line":189,"column":33},"end":{"line":223,"column":5}},"line":189},"19":{"name":"(anonymous_19)","decl":{"start":{"line":193,"column":38},"end":{"line":193,"column":39}},"loc":{"start":{"line":193,"column":56},"end":{"line":221,"column":9}},"line":193},"20":{"name":"(anonymous_20)","decl":{"start":{"line":224,"column":4},"end":{"line":224,"column":5}},"loc":{"start":{"line":224,"column":30},"end":{"line":253,"column":5}},"line":224},"21":{"name":"(anonymous_21)","decl":{"start":{"line":251,"column":29},"end":{"line":251,"column":30}},"loc":{"start":{"line":251,"column":40},"end":{"line":251,"column":65}},"line":251},"22":{"name":"(anonymous_22)","decl":{"start":{"line":254,"column":4},"end":{"line":254,"column":5}},"loc":{"start":{"line":254,"column":23},"end":{"line":257,"column":5}},"line":254},"23":{"name":"(anonymous_23)","decl":{"start":{"line":258,"column":4},"end":{"line":258,"column":5}},"loc":{"start":{"line":258,"column":20},"end":{"line":283,"column":5}},"line":258},"24":{"name":"(anonymous_24)","decl":{"start":{"line":260,"column":41},"end":{"line":260,"column":42}},"loc":{"start":{"line":260,"column":61},"end":{"line":270,"column":9}},"line":260},"25":{"name":"(anonymous_25)","decl":{"start":{"line":284,"column":4},"end":{"line":284,"column":5}},"loc":{"start":{"line":284,"column":25},"end":{"line":309,"column":5}},"line":284},"26":{"name":"(anonymous_26)","decl":{"start":{"line":286,"column":41},"end":{"line":286,"column":42}},"loc":{"start":{"line":286,"column":61},"end":{"line":300,"column":9}},"line":286}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":14,"column":8},"end":{"line":16,"column":9}},"type":"if","locations":[{"start":{"line":14,"column":8},"end":{"line":16,"column":9}},{"start":{"line":14,"column":8},"end":{"line":16,"column":9}}],"line":14},"4":{"loc":{"start":{"line":14,"column":12},"end":{"line":14,"column":61}},"type":"binary-expr","locations":[{"start":{"line":14,"column":12},"end":{"line":14,"column":21}},{"start":{"line":14,"column":25},"end":{"line":14,"column":41}},{"start":{"line":14,"column":45},"end":{"line":14,"column":61}}],"line":14},"5":{"loc":{"start":{"line":19,"column":8},"end":{"line":21,"column":9}},"type":"if","locations":[{"start":{"line":19,"column":8},"end":{"line":21,"column":9}},{"start":{"line":19,"column":8},"end":{"line":21,"column":9}}],"line":19},"6":{"loc":{"start":{"line":26,"column":12},"end":{"line":47,"column":13}},"type":"if","locations":[{"start":{"line":26,"column":12},"end":{"line":47,"column":13}},{"start":{"line":26,"column":12},"end":{"line":47,"column":13}}],"line":26},"7":{"loc":{"start":{"line":78,"column":8},"end":{"line":80,"column":9}},"type":"if","locations":[{"start":{"line":78,"column":8},"end":{"line":80,"column":9}},{"start":{"line":78,"column":8},"end":{"line":80,"column":9}}],"line":78},"8":{"loc":{"start":{"line":84,"column":8},"end":{"line":91,"column":9}},"type":"if","locations":[{"start":{"line":84,"column":8},"end":{"line":91,"column":9}},{"start":{"line":84,"column":8},"end":{"line":91,"column":9}}],"line":84},"9":{"loc":{"start":{"line":88,"column":12},"end":{"line":90,"column":13}},"type":"if","locations":[{"start":{"line":88,"column":12},"end":{"line":90,"column":13}},{"start":{"line":88,"column":12},"end":{"line":90,"column":13}}],"line":88},"10":{"loc":{"start":{"line":101,"column":12},"end":{"line":118,"column":13}},"type":"switch","locations":[{"start":{"line":102,"column":16},"end":{"line":102,"column":27}},{"start":{"line":103,"column":16},"end":{"line":107,"column":26}},{"start":{"line":108,"column":16},"end":{"line":108,"column":26}},{"start":{"line":109,"column":16},"end":{"line":109,"column":26}},{"start":{"line":110,"column":16},"end":{"line":111,"column":78}},{"start":{"line":112,"column":16},"end":{"line":113,"column":78}},{"start":{"line":114,"column":16},"end":{"line":115,"column":67}},{"start":{"line":116,"column":16},"end":{"line":117,"column":90}}],"line":101},"11":{"loc":{"start":{"line":105,"column":33},"end":{"line":105,"column":71}},"type":"binary-expr","locations":[{"start":{"line":105,"column":33},"end":{"line":105,"column":39}},{"start":{"line":105,"column":43},"end":{"line":105,"column":71}}],"line":105},"12":{"loc":{"start":{"line":124,"column":8},"end":{"line":126,"column":9}},"type":"if","locations":[{"start":{"line":124,"column":8},"end":{"line":126,"column":9}},{"start":{"line":124,"column":8},"end":{"line":126,"column":9}}],"line":124},"13":{"loc":{"start":{"line":130,"column":12},"end":{"line":142,"column":13}},"type":"switch","locations":[{"start":{"line":131,"column":16},"end":{"line":136,"column":26}},{"start":{"line":137,"column":16},"end":{"line":139,"column":26}},{"start":{"line":140,"column":16},"end":{"line":141,"column":83}}],"line":130},"14":{"loc":{"start":{"line":132,"column":20},"end":{"line":134,"column":21}},"type":"if","locations":[{"start":{"line":132,"column":20},"end":{"line":134,"column":21}},{"start":{"line":132,"column":20},"end":{"line":134,"column":21}}],"line":132},"15":{"loc":{"start":{"line":132,"column":24},"end":{"line":132,"column":67}},"type":"binary-expr","locations":[{"start":{"line":132,"column":24},"end":{"line":132,"column":45}},{"start":{"line":132,"column":49},"end":{"line":132,"column":67}}],"line":132},"16":{"loc":{"start":{"line":144,"column":8},"end":{"line":146,"column":9}},"type":"if","locations":[{"start":{"line":144,"column":8},"end":{"line":146,"column":9}},{"start":{"line":144,"column":8},"end":{"line":146,"column":9}}],"line":144},"17":{"loc":{"start":{"line":148,"column":12},"end":{"line":150,"column":13}},"type":"if","locations":[{"start":{"line":148,"column":12},"end":{"line":150,"column":13}},{"start":{"line":148,"column":12},"end":{"line":150,"column":13}}],"line":148},"18":{"loc":{"start":{"line":148,"column":16},"end":{"line":148,"column":65}},"type":"binary-expr","locations":[{"start":{"line":148,"column":16},"end":{"line":148,"column":37}},{"start":{"line":148,"column":41},"end":{"line":148,"column":65}}],"line":148},"19":{"loc":{"start":{"line":154,"column":8},"end":{"line":156,"column":9}},"type":"if","locations":[{"start":{"line":154,"column":8},"end":{"line":156,"column":9}},{"start":{"line":154,"column":8},"end":{"line":156,"column":9}}],"line":154},"20":{"loc":{"start":{"line":160,"column":8},"end":{"line":162,"column":9}},"type":"if","locations":[{"start":{"line":160,"column":8},"end":{"line":162,"column":9}},{"start":{"line":160,"column":8},"end":{"line":162,"column":9}}],"line":160},"21":{"loc":{"start":{"line":166,"column":8},"end":{"line":168,"column":9}},"type":"if","locations":[{"start":{"line":166,"column":8},"end":{"line":168,"column":9}},{"start":{"line":166,"column":8},"end":{"line":168,"column":9}}],"line":166},"22":{"loc":{"start":{"line":172,"column":8},"end":{"line":186,"column":9}},"type":"if","locations":[{"start":{"line":172,"column":8},"end":{"line":186,"column":9}},{"start":{"line":172,"column":8},"end":{"line":186,"column":9}}],"line":172},"23":{"loc":{"start":{"line":174,"column":12},"end":{"line":185,"column":13}},"type":"if","locations":[{"start":{"line":174,"column":12},"end":{"line":185,"column":13}},{"start":{"line":174,"column":12},"end":{"line":185,"column":13}}],"line":174},"24":{"loc":{"start":{"line":174,"column":16},"end":{"line":174,"column":62}},"type":"binary-expr","locations":[{"start":{"line":174,"column":16},"end":{"line":174,"column":38}},{"start":{"line":174,"column":42},"end":{"line":174,"column":62}}],"line":174},"25":{"loc":{"start":{"line":177,"column":17},"end":{"line":185,"column":13}},"type":"if","locations":[{"start":{"line":177,"column":17},"end":{"line":185,"column":13}},{"start":{"line":177,"column":17},"end":{"line":185,"column":13}}],"line":177},"26":{"loc":{"start":{"line":180,"column":17},"end":{"line":185,"column":13}},"type":"if","locations":[{"start":{"line":180,"column":17},"end":{"line":185,"column":13}},{"start":{"line":180,"column":17},"end":{"line":185,"column":13}}],"line":180},"27":{"loc":{"start":{"line":196,"column":12},"end":{"line":220,"column":13}},"type":"switch","locations":[{"start":{"line":197,"column":16},"end":{"line":201,"column":26}},{"start":{"line":202,"column":16},"end":{"line":207,"column":26}},{"start":{"line":208,"column":16},"end":{"line":209,"column":74}},{"start":{"line":210,"column":16},"end":{"line":211,"column":74}},{"start":{"line":212,"column":16},"end":{"line":213,"column":74}},{"start":{"line":214,"column":16},"end":{"line":215,"column":74}},{"start":{"line":216,"column":16},"end":{"line":217,"column":71}},{"start":{"line":218,"column":16},"end":{"line":219,"column":90}}],"line":196},"28":{"loc":{"start":{"line":199,"column":33},"end":{"line":199,"column":75}},"type":"binary-expr","locations":[{"start":{"line":199,"column":33},"end":{"line":199,"column":65}},{"start":{"line":199,"column":69},"end":{"line":199,"column":75}}],"line":199},"29":{"loc":{"start":{"line":205,"column":33},"end":{"line":205,"column":75}},"type":"binary-expr","locations":[{"start":{"line":205,"column":33},"end":{"line":205,"column":65}},{"start":{"line":205,"column":69},"end":{"line":205,"column":75}}],"line":205},"30":{"loc":{"start":{"line":232,"column":12},"end":{"line":234,"column":13}},"type":"if","locations":[{"start":{"line":232,"column":12},"end":{"line":234,"column":13}},{"start":{"line":232,"column":12},"end":{"line":234,"column":13}}],"line":232},"31":{"loc":{"start":{"line":235,"column":12},"end":{"line":237,"column":13}},"type":"if","locations":[{"start":{"line":235,"column":12},"end":{"line":237,"column":13}},{"start":{"line":235,"column":12},"end":{"line":237,"column":13}}],"line":235},"32":{"loc":{"start":{"line":245,"column":16},"end":{"line":247,"column":17}},"type":"if","locations":[{"start":{"line":245,"column":16},"end":{"line":247,"column":17}},{"start":{"line":245,"column":16},"end":{"line":247,"column":17}}],"line":245}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":2,"7":2,"8":1,"9":1,"10":1,"11":1,"12":0,"13":1,"14":1,"15":1,"16":5945,"17":5945,"18":5944,"19":5944,"20":5944,"21":5944,"22":5944,"23":64612,"24":0,"25":1,"26":1,"27":1,"28":1,"29":1,"30":5944,"31":1,"32":1,"33":1,"34":0,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":0,"43":4,"44":4,"45":0,"46":4,"47":4,"48":2,"49":2,"50":0,"51":4,"52":4,"53":4,"54":6,"55":6,"56":6,"57":2,"58":4,"59":2,"60":3,"61":1,"62":0,"63":0,"64":6,"65":2,"66":2,"67":0,"68":2,"69":2,"70":2,"71":4,"72":2,"73":0,"74":2,"75":2,"76":2,"77":2,"78":0,"79":2,"80":0,"81":2,"82":5,"83":0,"84":0,"85":0,"86":0,"87":129224,"88":129224,"89":0,"90":64612,"91":64612,"92":0,"93":64612,"94":64612,"95":64612,"96":0,"97":64612,"98":0,"99":64612,"100":0,"101":64612,"102":0,"103":387672,"104":387672,"105":387672,"106":387672,"107":387672,"108":387672,"109":387672,"110":64612,"111":129224,"112":64612,"113":64612,"114":64612,"115":129224,"116":64612,"117":0,"118":129224,"119":64612,"120":64612,"121":0,"122":0,"123":387672,"124":2,"125":2,"126":2,"127":2,"128":2,"129":2,"130":2,"131":129224,"132":105,"133":129224,"134":0,"135":2,"136":2,"137":2,"138":2,"139":105,"140":105,"141":1050,"142":784,"143":2,"144":2,"145":463,"146":2,"147":2,"148":2,"149":2,"150":2,"151":2,"152":2,"153":2,"154":2,"155":2,"156":0,"157":2,"158":2,"159":2,"160":2,"161":2,"162":2,"163":2,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":1},"f":{"0":2,"1":2,"2":2,"3":5945,"4":64612,"5":1,"6":0,"7":4,"8":4,"9":4,"10":6,"11":6,"12":2,"13":4,"14":0,"15":129224,"16":64612,"17":64612,"18":387672,"19":387672,"20":2,"21":463,"22":2,"23":2,"24":2,"25":0,"26":0},"b":{"0":[1,1,1],"1":[0,2],"2":[2,2],"3":[1,1],"4":[2,1,1],"5":[0,1],"6":[5944,1],"7":[0,4],"8":[2,2],"9":[0,2],"10":[1,2,0,2,3,1,0,0],"11":[4,4],"12":[0,2],"13":[2,2,0],"14":[0,2],"15":[2,2],"16":[0,2],"17":[0,5],"18":[5,5],"19":[0,0],"20":[129224,0],"21":[64612,0],"22":[64612,0],"23":[0,64612],"24":[64612,0],"25":[0,64612],"26":[0,64612],"27":[64612,64612,0,129224,64612,64612,0,0],"28":[129224,3359],"29":[129224,129168],"30":[105,129119],"31":[0,129224],"32":[784,266]},"inputSourceMap":{"version":3,"file":"C:/Users/Winston/IdeaProjects/project_team203/src/controller/InsightFacade.ts","sources":["C:/Users/Winston/IdeaProjects/project_team203/src/controller/InsightFacade.ts"],"names":[],"mappings":"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","sourcesContent":["import {IInsightFacade, InsightDataset, InsightDatasetKind, InsightResult, InsightError, ResultTooLargeError\r\n} from \"./IInsightFacade\";\r\nimport JSZip from \"jszip\";\r\nimport fs from \"fs-extra\";\r\n\r\n/**\r\n * This is the main programmatic entry point for the project.\r\n * Method documentation is in IInsightFacade\r\n *\r\n */\r\nexport default class InsightFacade implements IInsightFacade {\r\n\tconstructor() {\r\n\t\tconsole.log(\"InsightFacadeImpl::init()\");\r\n\t}\r\n\r\n\tpublic async addDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]> {\r\n\t\tif (id === \"\" || id.includes(\"_\") || id.trim() === \"\") {\r\n\t\t\treturn Promise.reject(new InsightError(\"Invalid id\"));\r\n\t\t}\r\n\t\tlet zip = await JSZip.loadAsync(content, {base64: true});\r\n\t\tlet folder = zip.folder(\"courses\");\r\n\t\tif (folder === null) {\r\n\t\t\treturn Promise.reject(new InsightError(\"Folder not found in zip\"));\r\n\t\t}\r\n\t\tlet fileInFolder = zip.files;\r\n\t\tlet fileNames = Object.keys(fileInFolder);\r\n\t\tlet filePromises = fileNames.map(async (fileName) => {\r\n\t\t\tlet file = zip.file(fileName);\r\n\t\t\tif (file != null) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tlet jsonContent = await file.async(\"string\");\r\n\t\t\t\t\tlet jsonObject = JSON.parse(jsonContent);\r\n\t\t\t\t\tlet dataPoints = jsonObject.result;\r\n\t\t\t\t\treturn dataPoints.map((data: any) => ({\r\n\t\t\t\t\t\t[`${id}_uuid`]: data.id,\r\n\t\t\t\t\t\t[`${id}_id`]: data.Course,\r\n\t\t\t\t\t\t[`${id}_title`]: data.Title,\r\n\t\t\t\t\t\t[`${id}_instructor`]: data.Professor,\r\n\t\t\t\t\t\t[`${id}_dept`]: data.Subject,\r\n\t\t\t\t\t\t[`${id}_year`]: data.Year,\r\n\t\t\t\t\t\t[`${id}_avg`]: data.Avg,\r\n\t\t\t\t\t\t[`${id}_pass`]: data.Pass,\r\n\t\t\t\t\t\t[`${id}_fail`]: data.Fail,\r\n\t\t\t\t\t\t[`${id}_audit`]: data.Audit,\r\n\t\t\t\t\t}));\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tthrow new InsightError(\"Error processing file: \" + fileName);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\ttry {\r\n\t\t\tlet rawResults = await Promise.all(filePromises);\r\n\t\t\tlet refinedResults: object[][] = rawResults.filter(Array.isArray);\r\n\t\t\tlet array: object[] = [];\r\n\t\t\tfor (let result of refinedResults) {\r\n\t\t\t\tarray = array.concat(result);\r\n\t\t\t}\r\n\t\t\tlet cacheData: object = this.makeInsightResult(id, kind, array);\r\n\t\t\tawait fs.ensureDir(\"./data\");\r\n\t\t\tawait fs.writeJson(`./data/${id}`, cacheData);\r\n\t\t} catch (err) {\r\n\t\t\treturn Promise.reject(err);\r\n\t\t}\r\n\t\treturn Promise.resolve([\"HI\"]);\r\n\t}\r\n\r\n\tpublic makeInsightResult(id: string, kind: InsightDatasetKind, array: any[]): InsightResult {\r\n\t\tlet cachedData: {[key: string]: any} = {};\r\n\t\tcachedData[\"id\"] = id;\r\n\t\tcachedData[\"kind\"] = kind;\r\n\t\tcachedData[\"numRows\"] = array.length;\r\n\t\tcachedData[\"data\"] = array;\r\n\t\treturn cachedData;\r\n\t}\r\n\r\n\tpublic async removeDataset(id: string): Promise<string> {\r\n\t\treturn Promise.resolve(\"\");\r\n\t}\r\n\r\n\tpublic getID(key: string): string {\r\n\t\tlet parts = key.split(\"_\");\r\n\t\tif (parts.length > 2) {\r\n\t\t\tthrow new InsightError(\"Too many underscores in id\");\r\n\t\t}\r\n\t\treturn parts[0];\r\n\t}\r\n\r\n\tpublic assignID(currentID: string, id: string[]) {\r\n\t\tif (id[0] === \"null\") {\r\n\t\t\tid[0] = currentID;\r\n\t\t} else {\r\n\t\t\tif (id[0] !== currentID) {\r\n\t\t\t\tthrow new InsightError(\"Can't have multiple sections!\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic validComparison(query: object, id: string[], type: string): boolean {\r\n\t\tlet currentID = this.getID(Object.keys(query)[0]);\r\n\t\tthis.assignID(currentID, id);\r\n\t\treturn (typeof Object.values(query)[0]) === type;\r\n\t}\r\n\r\n\tpublic validateWhere(query: object, id: string[]): boolean {\r\n\t\t// Currently: checks if mComparison's and sComparison's type are number and string.\r\n\t\t// checks if filter key is invalid and throws insight error.\r\n\t\tlet result: boolean = true;\r\n\t\tObject.entries(query).forEach(([key, value]) => {\r\n\t\t\tswitch (key) {\r\n\t\t\t\tcase \"AND\":\r\n\t\t\t\tcase \"OR\":\r\n\t\t\t\t\tfor (let item of value) {\r\n\t\t\t\t\t\tresult = result && this.validateWhere(item, id);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"LT\":\r\n\t\t\t\tcase \"GT\":\r\n\t\t\t\tcase \"EQ\":\r\n\t\t\t\t\treturn result = this.validComparison(value, id, \"number\");\r\n\t\t\t\tcase \"IS\":\r\n\t\t\t\t\treturn result = this.validComparison(value, id, \"string\");\r\n\t\t\t\tcase \"NOT\":\r\n\t\t\t\t\treturn result = !this.validateWhere(value, id);\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new InsightError(\"Invalid filter key: \" + key);\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic validateOption(query: object, id: string[]): void {\r\n\t\tlet keys = Object.keys(query);\r\n\t\tif (!keys.includes(\"COLUMNS\")) {\r\n\t\t\tthrow new InsightError(\"No columns!\");\r\n\t\t}\r\n\t\tlet columns: string[] = [];\r\n\t\tlet order: string = \"null\";\r\n\t\tObject.entries(query).forEach(([key, value]) => {\r\n\t\t\tswitch (key) {\r\n\t\t\t\tcase \"COLUMNS\":\r\n\t\t\t\t\tif (!Array.isArray(value) || value.length === 0) {\r\n\t\t\t\t\t\tthrow new InsightError(\"Column must be non-empty!\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcolumns = value;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"ORDER\":\r\n\t\t\t\t\torder = value;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new InsightError(\"Invalid Key: \" + key);\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (!columns.includes(order)) {\r\n\t\t\tthrow new InsightError(\"Items in order must be in columns too!\");\r\n\t\t}\r\n\t\tfor (let item of columns) {\r\n\t\t\tif (!item.includes(id[0]) || !(order.includes(id[0]))) {\r\n\t\t\t\tthrow new InsightError(\"One database at a time!\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic lt(ckey: string, cvalue: number, skeys: string[], svalue: any[]): boolean {\r\n\t\tif (skeys.includes(ckey)) {\r\n\t\t\treturn cvalue > (svalue[skeys.indexOf(ckey)] as number);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic gt(ckey: string, cvalue: number, skeys: string[], svalue: any[]): boolean {\r\n\t\tif (skeys.includes(ckey)) {\r\n\t\t\treturn cvalue < (svalue[skeys.indexOf(ckey)] as number);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic eq(ckey: string, cvalue: number, skeys: string[], svalue: any[]): boolean {\r\n\t\tif (skeys.includes(ckey)) {\r\n\t\t\treturn cvalue === (svalue[skeys.indexOf(ckey)] as number);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic is(ckey: string, cvalue: string, skeys: string[], svalue: any[]): boolean {\r\n\t\tif (skeys.includes(ckey)) {\r\n\t\t\tlet string = (svalue[skeys.indexOf(ckey)] as string);\r\n\t\t\tif (string.startsWith(\"*\") && string.endsWith(\"*\")) {\r\n\t\t\t\treturn string.includes(cvalue);\r\n\t\t\t} else if (string.startsWith(\"*\")) {\r\n\t\t\t\treturn string.startsWith(cvalue);\r\n\t\t\t} else if (string.endsWith(\"*\")) {\r\n\t\t\t\treturn string.endsWith(cvalue);\r\n\t\t\t} else {\r\n\t\t\t\treturn string === cvalue;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic performWhere(query: object, subject: object): boolean {\r\n\t\t// console.log(query);\r\n\t\tlet result: boolean = true;\r\n\t\tlet skeys = Object.keys(subject);\r\n\t\tlet svalues = Object.values(subject);\r\n\t\tObject.entries(query).forEach(([key, value]) => {\r\n\t\t\tlet ckey: string = Object.keys(value)[0];\r\n\t\t\tlet cvalue = Object.values(value)[0];\r\n\t\t\tswitch (key) {\r\n\t\t\t\tcase \"AND\":\r\n\t\t\t\t\tfor (let item of value) {\r\n\t\t\t\t\t\tresult = this.performWhere(item, subject) && result;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"OR\":\r\n\t\t\t\t\tresult = false;\r\n\t\t\t\t\tfor (let item of value) {\r\n\t\t\t\t\t\tresult = this.performWhere(item, subject) || result;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"LT\":\r\n\t\t\t\t\treturn result = this.lt(ckey, (cvalue as number), skeys, svalues);\r\n\t\t\t\tcase \"GT\":\r\n\t\t\t\t\treturn result =  this.gt(ckey, (cvalue as number), skeys, svalues);\r\n\t\t\t\tcase \"EQ\":\r\n\t\t\t\t\treturn result = this.eq(ckey, (cvalue as number), skeys, svalues);\r\n\t\t\t\tcase \"IS\":\r\n\t\t\t\t\treturn result = this.is(ckey, (cvalue as string), skeys, svalues);\r\n\t\t\t\tcase \"NOT\":\r\n\t\t\t\t\treturn result = !this.performWhere(value, subject);\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new InsightError(\"Invalid filter key: \" + key);\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic async performQuery(query: unknown): Promise<InsightResult[]> {\r\n\t\tlet jsonContent = JSON.stringify(query);\r\n\t\tlet queryContent = JSON.parse(jsonContent);\r\n\t\tlet idArray: string[] = [\"null\"];\r\n\t\tlet typesMatch: boolean = this.validateWhere(queryContent.WHERE, idArray); // This throws insightErrors. true;\r\n\t\tlet results: object[] = await this.getData();\r\n\t\tlet filteredResults: any[] = [];\r\n\t\tfor (let section of results) {\r\n\t\t\tif (this.performWhere(queryContent.WHERE, section)) {\r\n\t\t\t\tfilteredResults.push(section);\r\n\t\t\t}\r\n\t\t\tif (filteredResults.length > 5000) {\r\n\t\t\t\tthrow new ResultTooLargeError(\"Its over 5000 queries!\");\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.validateOption(queryContent.OPTIONS, idArray);\r\n\t\tlet columnsPair: [string, any] = Object.entries(queryContent.OPTIONS)[0];\r\n\t\tlet columns: string[] = Object.values(columnsPair)[1];\r\n\t\tfor (let result of filteredResults) {\r\n\t\t\tlet resultKeys = Object.keys(result);\r\n\t\t\tfor (let key of resultKeys) {\r\n\t\t\t\tif (!columns.includes(key)) {\r\n\t\t\t\t\tdelete result[key];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet orderKey = this.getOrderKey(queryContent.OPTIONS);\r\n\t\tfilteredResults.sort((a,b) =>\r\n\t\t\t(a[orderKey] - b[orderKey])\r\n\t\t);\r\n\t\treturn Promise.resolve(filteredResults);\r\n\t}\r\n\r\n\tpublic getOrderKey(query: object): string {\r\n\t\tlet columnsPair = Object.entries(query)[1];\r\n\t\treturn Object.values(columnsPair)[1];\r\n\t}\r\n\r\n\tpublic async getData() {\r\n\t\tlet fileNames = await fs.readdir(\"./data\");\r\n\t\tlet filePromises = fileNames.map(async (fileName) => {\r\n\t\t\ttry {\r\n\t\t\t\tlet fileContent = await fs.readJson(`./data/${fileName}`);\r\n\t\t\t\tlet jsonString = JSON.stringify(fileContent);\r\n\t\t\t\tlet data = JSON.parse(jsonString);\r\n\t\t\t\treturn data.data;\r\n\t\t\t} catch (err) {\r\n\t\t\t\tthrow new InsightError(\"Corrupted persisted file\");\r\n\t\t\t}\r\n\t\t});\r\n\t\tlet array: object[] = [];\r\n\t\ttry {\r\n\t\t\tlet rawResults: any[] = await Promise.all(filePromises);\r\n\t\t\tlet refinedResults: object[][] = rawResults.filter(Array.isArray);\r\n\t\t\tfor (let result of refinedResults) {\r\n\t\t\t\tarray = array.concat(result);\r\n\t\t\t}\r\n\t\t\treturn array;\r\n\t\t} catch (err) {\r\n\t\t\tthrow new InsightError(\"Blah\");\r\n\t\t}\r\n\t}\r\n\r\n\tpublic async listDatasets(): Promise<InsightDataset[]> {\r\n\t\tlet fileNames = await fs.readdir(\"./data\");\r\n\t\tlet filePromises = fileNames.map(async (fileName) => {\r\n\t\t\ttry {\r\n\t\t\t\tlet fileContent = await fs.readJson(`./data/${fileName}`);\r\n\t\t\t\tlet jsonString = JSON.stringify(fileContent);\r\n\t\t\t\tlet data = JSON.parse(jsonString);\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: data.id,\r\n\t\t\t\t\tkind: data.kind,\r\n\t\t\t\t\tnumRows: data.numRows\r\n\t\t\t\t};\r\n\t\t\t} catch (err) {\r\n\t\t\t\tthrow new InsightError(\"Corrupted persisted file\");\r\n\t\t\t}\r\n\t\t});\r\n\t\tlet results: InsightDataset[];\r\n\t\ttry {\r\n\t\t\tresults = await Promise.all(filePromises);\r\n\t\t} catch (err) {\r\n\t\t\tthrow new InsightError(\"Blah\");\r\n\t\t}\r\n\t\treturn Promise.resolve(results);\r\n\t}\r\n}\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c2c09733ae60bc09a0b4a66f202a756e631406db","contentHash":"973152a111f3cc9837513ddb21d1fe9bbe506b82d721981196c49ae184784458"}}